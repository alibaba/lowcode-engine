{
  "version": "1.0.0",
  "packages": [
    {
      "package": "moment",
      "urls": ["https://g.alicdn.com/mylib/moment/2.24.0/min/moment.min.js"],
      "library": "moment"
    },
    {
      "title": "fusion组件库",
      "package": "@alifd/next",
      "version": "1.20.0",
      "urls": ["https://unpkg.antfin-inc.com/@alifd/next@1.20.0/dist/next.js", "https://unpkg.antfin-inc.com/@alifd/next@1.20.0/dist/next.css"],
      "library": "Next"
    },
    {
      "title": "MCBreadcrumb",
      "package": "mc-breadcrumb",
      "version": "1.0.0",
      "urls": ["https://unpkg.alibaba-inc.com/mc-breadcrumb@1.0.0/dist/MCBreadcrumb.js", "https://unpkg.alibaba-inc.com/mc-breadcrumb@1.0.0/dist/MCBreadcrumb.css"],
      "library": "MCBreadcrumb"
    }
  ],
  "components": [
    {
      "componentName": "Page",
      "title": "Page",
      "props": [
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "events": {
          "supportedLifecycles": [
            {
              "description": "初始化时",
              "name": "constructor"
            },
            {
              "description": "装载后",
              "name": "componentDidMount"
            },
            {
              "description": "更新时",
              "name": "componentDidMount"
            },
            {
              "description": "卸载时",
              "name": "componentWillUnmount"
            }
          ]
        },
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "Div",
      "title": "Div",
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "Table",
      "title": "Table",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Table",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string"
        },
        {
          "name": "pure",
          "propType": "bool"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "tableLayout",
          "propType": {
            "type": "oneOf",
            "value": [
              "fixed",
              "auto"
            ]
          }
        },
        {
          "name": "tableWidth",
          "propType": "number"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium"
            ]
          }
        },
        {
          "name": "dataSource",
          "propType": {
            "type": "arrayOf",
            "value": "object"
          }
        },
        {
          "name": "entireDataSource",
          "propType": "array"
        },
        {
          "name": "onRowClick",
          "propType": "func"
        },
        {
          "name": "onRowMouseEnter",
          "propType": "func"
        },
        {
          "name": "rowProps",
          "propType": "func"
        },
        {
          "name": "cellProps",
          "propType": "func"
        },
        {
          "name": "hasBorder",
          "propType": "bool"
        },
        {
          "name": "hasHeader",
          "propType": "bool"
        },
        {
          "name": "isZebra",
          "propType": "bool"
        },
        {
          "name": "loading",
          "propType": "bool"
        },
        {
          "name": "filterParams",
          "propType": "object"
        },
        {
          "name": "sort",
          "propType": "object"
        },
        {
          "name": "sortIcons",
          "propType": "object"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "components",
          "propType": "object"
        },
        {
          "name": "children",
          "propType": "array",
          "description": "列"
        },
        {
          "name": "emptyContent",
          "propType": "node"
        },
        {
          "name": "primaryKey",
          "propType": "string"
        },
        {
          "name": "lockType",
          "propType": {
            "type": "oneOf",
            "value": [
              "left",
              "right"
            ]
          }
        },{
          "name": "style",
          "propType": "object"
        },
        {
          "name": "wrapperContent",
          "propType": "any"
        },
        {
          "name": "refs",
          "propType": "object"
        },
        {
          "name": "expandedRowRender",
          "propType": "func"
        },
        {
          "name": "expandedRowIndent",
          "propType": "array"
        },
        {
          "name": "hasExpandedRowCtrl",
          "propType": "bool"
        },
        {
          "name": "getExpandedColProps",
          "propType": "func"
        },
        {
          "name": "openRowKeys",
          "propType": "array"
        },
        {
          "name": "onRowOpen",
          "propType": "func"
        },
        {
          "name": "onExpandedRowClick",
          "propType": "func"
        },
        {
          "name": "fixedHeader",
          "propType": "bool"
        },
        {
          "name": "rowSelection",
          "propType": "object"
        },
        {
          "name": "stickyHeader",
          "propType": "bool"
        },
        {
          "name": "offsetTop",
          "propType": "number"
        },
        {
          "name": "affixProps",
          "propType": "object"
        },
        {
          "name": "indent",
          "propType": "number"
        },
        {
          "name": "isTree",
          "propType": "bool"
        },
        {
          "name": "useVirtual",
          "propType": "bool"
        },
        {
          "name": "onBodyScroll",
          "propType": "func"
        },
        {
          "name": "expandedIndexSimulate",
          "propType": "bool"
        },
        {
          "name": "crossline",
          "propType": "bool"
        },
        {
          "name": "lengths",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        },
        "props": {
          "isExtends": true,
          "override": [{
            "name": "dataSource",
            "setter": "JsonSetter"
          }]
        }
      }
    },
    {
      "componentName": "Table.Column",
      "title": "Table.Column",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Table",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Column"
      },
      "props": [
        {
          "name": "title",
          "propType": "string"
        },
        {
          "name": "dataIndex",
          "propType": "string"
        }
      ]
    },
    {
      "componentName": "Badge",
      "title": "Badge",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Badge",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "徽章依托的内容"
        },
        {
          "name": "count",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              "string"
            ]
          },
          "description": "展示的数字，大于 overflowCount 时显示为 ${overflowCount}+，为 0 时默认隐藏",
          "defaultValue": 0
        },
        {
          "name": "showZero",
          "propType": "bool",
          "description": "当count为0时，是否显示count",
          "defaultValue": true
        },
        {
          "name": "content",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义节点内容"
        },
        {
          "name": "overflowCount",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              "string"
            ]
          },
          "description": "展示的封顶的数字",
          "defaultValue": 99
        },
        {
          "name": "dot",
          "propType": "bool",
          "description": "不展示数字，只展示一个小红点",
          "defaultValue": false
        }
      ]
    },
    {
      "componentName": "Balloon",
      "title": "Balloon",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Balloon",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内敛样式"
        },
        {
          "name": "children",
          "propType": "any",
          "description": "浮层的内容"
        },
        {
          "name": "size",
          "propType": "string",
          "defaultValue": "medium"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "primary"
            ]
          },
          "description": "样式类型",
          "defaultValue": "normal"
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层当前显示的状态"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认显示的状态",
          "defaultValue": false
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层在显示和隐藏触发的事件\n@param {Boolean} visible 弹层是否隐藏和显示\n@param {String} type 触发弹层显示或隐藏的来源， closeClick 表示由自带的关闭按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "alignEdge",
          "propType": "bool",
          "description": "弹出层对齐方式, 是否为边缘对齐",
          "defaultValue": false
        },
        {
          "name": "closable",
          "propType": "bool",
          "description": "是否显示关闭按钮",
          "defaultValue": true
        },
        {
          "name": "align",
          "propType": {
            "type": "oneOf",
            "value": [
              "t",
              "r",
              "b",
              "l",
              "tl",
              "tr",
              "bl",
              "br",
              "lt",
              "lb",
              "rt",
              "rb"
            ]
          },
          "description": "弹出层位置\n@enumdesc 上, 右, 下, 左, 上左, 上右, 下左, 下右, 左上, 左下, 右上, 右下 及其 两两组合",
          "defaultValue": "b"
        },
        {
          "name": "offset",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量\ne.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px",
          "defaultValue": [
            0,
            0
          ]
        },
        {
          "name": "trigger",
          "propType": "any",
          "description": "触发元素"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "触发行为\n鼠标悬浮, 鼠标点击('hover','click')或者它们组成的数组，如 ['hover', 'click'], 强烈不建议使用'focus'，若弹窗内容有复杂交互请使用click",
          "defaultValue": "hover"
        },
        {
          "name": "onClick",
          "propType": "func"
        },
        {
          "name": "onClose",
          "propType": "func",
          "description": "任何visible为false时会触发的事件"
        },
        {
          "name": "onHover",
          "propType": "func"
        },
        {
          "name": "needAdjust",
          "propType": "bool",
          "description": "是否进行自动位置调整",
          "defaultValue": false
        },
        {
          "name": "delay",
          "propType": "number",
          "description": "弹层在触发以后的延时显示, 单位毫秒 ms"
        },
        {
          "name": "afterClose",
          "propType": "func",
          "description": "浮层关闭后触发的事件, 如果有动画，则在动画结束后触发"
        },
        {
          "name": "shouldUpdatePosition",
          "propType": "bool",
          "description": "强制更新定位信息"
        },
        {
          "name": "autoFocus",
          "propType": "bool",
          "description": "弹层出现后是否自动focus到内部第一个元素",
          "defaultValue": true
        },
        {
          "name": "safeNode",
          "propType": "string",
          "description": "安全节点:对于triggetType为click的浮层,会在点击除了浮层外的其它区域时关闭浮层.safeNode用于添加不触发关闭的节点, 值可以是dom节点的id或者是节点的dom对象"
        },
        {
          "name": "safeId",
          "propType": "string",
          "description": "用来指定safeNode节点的id，和safeNode配合使用",
          "defaultValue": null
        },
        {
          "name": "animation",
          "propType": {
            "type": "oneOfType",
            "value": [
              "object",
              "bool"
            ]
          },
          "description": "配置动画的播放方式\n@param {String} in 进场动画\n@param {String} out 出场动画"
        },
        {
          "name": "cache",
          "propType": "bool",
          "description": "弹层的dom节点关闭时是否删除",
          "defaultValue": false
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。"
        },
        {
          "name": "container",
          "propType": "any"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层组件style，透传给Popup"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层组件className，透传给Popup",
          "defaultValue": ""
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层组件属性，透传给Popup"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "id",
          "propType": "string",
          "description": "弹层id, 传入值才会支持无障碍"
        }
      ]
    },
    {
      "componentName": "Tooltip",
      "title": "Tooltip",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Balloon",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Tooltip"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式类名的品牌前缀",
          "defaultValue": "next-"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内联样式"
        },
        {
          "name": "children",
          "propType": "any",
          "description": "tooltip的内容"
        },
        {
          "name": "align",
          "propType": {
            "type": "oneOf",
            "value": [
              "t",
              "r",
              "b",
              "l",
              "tl",
              "tr",
              "bl",
              "br",
              "lt",
              "lb",
              "rt",
              "rb"
            ]
          },
          "description": "弹出层位置\n@enumdesc 上, 右, 下, 左, 上左, 上右, 下左, 下右, 左上, 左下, 右上, 右下 及其 两两组合",
          "defaultValue": "b"
        },
        {
          "name": "trigger",
          "propType": "any",
          "description": "触发元素"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "触发行为\n鼠标悬浮,  鼠标点击('hover', 'click')或者它们组成的数组，如 ['hover', 'click'], 强烈不建议使用'focus'，若有复杂交互，推荐使用triggerType为click的Balloon组件",
          "defaultValue": "hover"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层组件style，透传给Popup"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层组件className，透传给Popup"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层组件属性，透传给Popup"
        },
        {
          "name": "pure",
          "propType": "bool",
          "description": "是否pure render"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "id",
          "propType": "string",
          "description": "弹层id, 传入值才会支持无障碍"
        },
        {
          "name": "delay",
          "propType": "number",
          "description": "如果需要让 Tooltip 内容可被点击，可以设置这个参数，例如 100",
          "defaultValue": 0
        }
      ]
    },
    {
      "componentName": "BalloonInner",
      "title": "BalloonInner",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Balloon",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Inner"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "closable",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "children",
          "propType": "any"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "alignEdge",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "onClose",
          "propType": "func"
        },
        {
          "name": "style",
          "propType": "any"
        },
        {
          "name": "align",
          "propType": "string",
          "defaultValue": "b"
        },
        {
          "name": "type",
          "propType": "string",
          "defaultValue": "normal"
        },
        {
          "name": "isTooltip",
          "propType": "bool"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        }
      ]
    },
    {
      "componentName": "Breadcrumb",
      "title": "Breadcrumb",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Breadcrumb",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式类名的品牌前缀",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "面包屑子节点，需传入 Breadcrumb.Item"
        },
        {
          "name": "maxNode",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              {
                "type": "oneOf",
                "value": [
                  "auto"
                ]
              }
            ]
          },
          "description": "面包屑最多显示个数，超出部分会被隐藏, 设置为 auto 会自动根据父元素的宽度适配。",
          "defaultValue": 100
        },
        {
          "name": "separator",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "分隔符，可以是文本或 Icon"
        },
        {
          "name": "component",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "func"
            ]
          },
          "description": "设置标签类型",
          "defaultValue": "nav"
        },
        {
          "name": "className",
          "propType": "any"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "MCBreadcrumb",
      "title": "MCBreadcrumb",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "mc-breadcrumb",
        "version": "1.0.0",
        "exportName": "MCBreadcrumb",
        "main": "lib/index.js",
        "destructuring": false,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式类名的品牌前缀",
          "defaultValue": "next-"
        },
        {
          "name": "title",
          "propType": "string",
          "description": "标题",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "面包屑子节点，需传入 Breadcrumb.Item"
        },
        {
          "name": "maxNode",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              {
                "type": "oneOf",
                "value": [
                  "auto"
                ]
              }
            ]
          },
          "description": "面包屑最多显示个数，超出部分会被隐藏, 设置为 auto 会自动根据父元素的宽度适配。",
          "defaultValue": 100
        },
        {
          "name": "separator",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "分隔符，可以是文本或 Icon"
        },
        {
          "name": "component",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "func"
            ]
          },
          "description": "设置标签类型",
          "defaultValue": "nav"
        },
        {
          "name": "className",
          "propType": "any"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "Breadcrumb.Item",
      "title": "Breadcrumb.Item",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Breadcrumb",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Item"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "link",
          "propType": "string",
          "description": "面包屑节点链接，如果设置这个属性，则该节点为`<a />` ，否则是`<span />`"
        },
        {
          "name": "activated",
          "propType": "bool"
        },
        {
          "name": "separator",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "className",
          "propType": "any"
        },
        {
          "name": "children",
          "description": "内容",
          "propType": "array"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "Button",
      "title": "Button",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Button",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "primary",
              "secondary",
              "normal"
            ]
          },
          "description": "按钮的类型",
          "defaultValue": "normal"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "按钮的尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "iconSize",
          "propType": {
            "type": "oneOf",
            "value": [
              "xxs",
              "xs",
              "small",
              "medium",
              "large",
              "xl",
              "xxl",
              "xxxl"
            ]
          },
          "description": "按钮中 Icon 的尺寸，用于替代 Icon 的默认大小"
        },
        {
          "name": "htmlType",
          "propType": {
            "type": "oneOf",
            "value": [
              "submit",
              "reset",
              "button"
            ]
          },
          "description": "当 component = 'button' 时，设置 button 标签的 type 值",
          "defaultValue": "button"
        },
        {
          "name": "component",
          "propType": {
            "type": "oneOf",
            "value": [
              "button",
              "a",
              "div",
              "span"
            ]
          },
          "description": "设置标签类型",
          "defaultValue": "button"
        },
        {
          "name": "loading",
          "propType": "bool",
          "description": "设置按钮的载入状态",
          "defaultValue": false
        },
        {
          "name": "ghost",
          "propType": {
            "type": "oneOf",
            "value": [
              true,
              false,
              "light",
              "dark"
            ]
          },
          "description": "是否为幽灵按钮",
          "defaultValue": false
        },
        {
          "name": "text",
          "propType": "bool",
          "description": "是否为文本按钮",
          "defaultValue": false
        },
        {
          "name": "warning",
          "propType": "bool",
          "description": "是否为警告按钮",
          "defaultValue": false
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "onClick",
          "propType": "func",
          "description": "点击按钮的回调\n@param {Object} e Event Object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "onMouseUp",
          "propType": "func"
        },
        {
          "name": "children",
          "propType": "array"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内联样式"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "Button.Group",
      "title": "Button.Group",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Button",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Group"
      },
      "props": [
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "size",
          "propType": "string",
          "description": "统一设置 Button 组件的按钮大小",
          "defaultValue": "medium"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内联样式"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "Calendar",
      "title": "Calendar",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Calendar",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "默认选中的日期（moment 对象）"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "选中的日期值 (moment 对象)"
        },
        {
          "name": "modes",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          }
        },
        {
          "name": "disableChangeMode",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "format",
          "propType": "string",
          "defaultValue": "YYYY-MM-DD"
        },
        {
          "name": "showOtherMonth",
          "propType": "bool",
          "description": "是否展示非本月的日期",
          "defaultValue": true
        },
        {
          "name": "defaultVisibleMonth",
          "propType": "func",
          "description": "默认展示的月份"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "card",
              "fullscreen",
              "panel"
            ]
          },
          "description": "展现形态",
          "defaultValue": "fullscreen"
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "选择日期单元格时的回调\n@param {Object} value 对应的日期值 (moment 对象)"
        },
        {
          "name": "onModeChange",
          "propType": "func",
          "description": "面板模式变化时的回调\n@param {String} mode 对应面板模式 date month year"
        },
        {
          "name": "onVisibleMonthChange",
          "propType": "func",
          "description": "展现的月份变化时的回调\n@param {Object} value 显示的月份 (moment 对象)\n@param {String} reason 触发月份改变原因"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义样式类"
        },
        {
          "name": "dateCellRender",
          "propType": "func",
          "description": "自定义日期渲染函数\n@param {Object} value 日期值（moment对象）\n@returns {ReactNode}"
        },
        {
          "name": "monthCellRender",
          "propType": "func",
          "description": "自定义月份渲染函数\n@param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n@returns {ReactNode}"
        },
        {
          "name": "yearCellRender",
          "propType": "func"
        },
        {
          "name": "disabledDate",
          "propType": "func",
          "description": "不可选择的日期\n@param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n@param {String} view 当前视图类型，year: 年， month: 月, date: 日\n@returns {Boolean}"
        },
        {
          "name": "locale",
          "propType": "object",
          "description": "国际化配置"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "RangeCalendar",
      "title": "RangeCalendar",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Calendar",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "RangeCalendar"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "defaultStartValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "默认的开始日期"
        },
        {
          "name": "defaultEndValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "默认的结束日期"
        },
        {
          "name": "startValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "开始日期（moment 对象）"
        },
        {
          "name": "endValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "结束日期（moment 对象）"
        },
        {
          "name": "disableChangeMode",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "format",
          "propType": "string",
          "defaultValue": "YYYY-MM-DD"
        },
        {
          "name": "showOtherMonth",
          "propType": "bool",
          "description": "是否显示非本月的日期",
          "defaultValue": false
        },
        {
          "name": "defaultVisibleMonth",
          "propType": "func",
          "description": "模板展示的月份（起始月份）"
        },
        {
          "name": "onVisibleMonthChange",
          "propType": "func",
          "description": "展现的月份变化时的回调\n@param {Object} value 显示的月份 (moment 对象)\n@param {String} reason 触发月份改变原因"
        },
        {
          "name": "disabledDate",
          "propType": "func",
          "description": "不可选择的日期\n@param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n@param {String} view 当前视图类型，year: 年， month: 月, date: 日\n@returns {Boolean}"
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "选择日期单元格时的回调\n@param {Object} value 对应的日期值 (moment 对象)"
        },
        {
          "name": "dateCellRender",
          "propType": "func",
          "description": "自定义日期单元格渲染"
        },
        {
          "name": "monthCellRender",
          "propType": "func",
          "description": "自定义月份渲染函数\n@param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n@returns {ReactNode}"
        },
        {
          "name": "yearCellRender",
          "propType": "func"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Card",
      "title": "Card",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Card",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "media",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "卡片的上的图片 / 视频"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "卡片的标题"
        },
        {
          "name": "subTitle",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "卡片的副标题"
        },
        {
          "name": "actions",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "卡片操作组，位置在卡片底部"
        },
        {
          "name": "showTitleBullet",
          "propType": "bool",
          "description": "是否显示标题的项目符号",
          "defaultValue": true
        },
        {
          "name": "showHeadDivider",
          "propType": "bool",
          "description": "是否展示头部的分隔线",
          "defaultValue": true
        },
        {
          "name": "contentHeight",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number"
            ]
          },
          "description": "内容区域的固定高度",
          "defaultValue": 120
        },
        {
          "name": "extra",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标题区域的用户自定义内容"
        },
        {
          "name": "free",
          "propType": "bool",
          "description": "是否开启自由模式，开启后card 将使用子组件配合使用, 设置此项后 title, subtitle, 等等属性都将失效",
          "defaultValue": false
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "CardHeader",
      "title": "CardHeader",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Card",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Header"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "卡片的标题"
        },
        {
          "name": "subTitle",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "卡片的副标题"
        },
        {
          "name": "extra",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标题区域的用户自定义内容"
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "div"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "CardMedia",
      "title": "CardMedia",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Card",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Media"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "div"
        },
        {
          "name": "image",
          "propType": "string",
          "description": "背景图片地址"
        },
        {
          "name": "src",
          "propType": "string",
          "description": "媒体源文件地址"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        }
      ]
    },
    {
      "componentName": "CardDivider",
      "title": "CardDivider",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Card",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Divider"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "hr"
        },
        {
          "name": "inset",
          "propType": "bool",
          "description": "分割线是否向内缩进"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "CardContent",
      "title": "CardContent",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Card",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Content"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "div"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "CardActions",
      "title": "CardActions",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Card",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Actions"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "div"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "CardBulletHeader",
      "title": "CardBulletHeader",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Card",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "BulletHeader"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "卡片的标题"
        },
        {
          "name": "subTitle",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "卡片的副标题"
        },
        {
          "name": "showTitleBullet",
          "propType": "bool",
          "description": "是否显示标题的项目符号",
          "defaultValue": true
        },
        {
          "name": "extra",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标题区域的用户自定义内容"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "CardCollaspeContent",
      "title": "CardCollaspeContent",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Card",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "CollaspeContent"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "contentHeight",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number"
            ]
          },
          "description": "内容区域的固定高度",
          "defaultValue": 120
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Cascader",
      "title": "Cascader",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Cascader",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "选中值改变时触发的回调函数\n@param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组\n@param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点\n@param {Object} extra 额外参数\n@param {Array} extra.selectedPath 单选时选中的数据的路径\n@param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中\n@param {Object} extra.currentData 多选时当前操作的数据\n@param {Array} extra.checkedData 多选时所有被选中的数据\n@param {Array} extra.indeterminateData 多选时半选的数据"
        },
        {
          "name": "onSelect",
          "propType": "func"
        },
        {
          "name": "expandTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "展开触发的方式",
          "defaultValue": "click"
        },
        {
          "name": "onExpand",
          "propType": "func",
          "description": "展开时触发的回调函数\n@param {Array} expandedValue 各列展开值的数组"
        },
        {
          "name": "useVirtual",
          "propType": "bool",
          "description": "是否开启虚拟滚动",
          "defaultValue": false
        },
        {
          "name": "multiple",
          "propType": "bool",
          "description": "是否多选",
          "defaultValue": false
        },
        {
          "name": "canOnlySelectLeaf",
          "propType": "bool",
          "description": "单选时是否只能选中叶子节点",
          "defaultValue": false
        },
        {
          "name": "canOnlyCheckLeaf",
          "propType": "bool",
          "description": "多选时是否只能选中叶子节点",
          "defaultValue": false
        },
        {
          "name": "checkStrictly",
          "propType": "bool",
          "description": "父子节点是否选中不关联",
          "defaultValue": false
        },
        {
          "name": "listStyle",
          "propType": "object",
          "description": "每列列表样式对象"
        },
        {
          "name": "listClassName",
          "propType": "string",
          "description": "每列列表类名"
        },
        {
          "name": "itemRender",
          "propType": "func",
          "description": "每列列表项渲染函数\n@param {Object} data 数据\n@return {ReactNode} 列表项内容"
        },
        {
          "name": "loadData",
          "propType": "func",
          "description": "异步加载数据函数\n@param {Object} data 当前点击异步加载的数据\n@param {Object} source 当前点击数据，source是原始对象"
        },
        {
          "name": "searchValue",
          "propType": "string"
        },
        {
          "name": "onBlur",
          "propType": "func"
        },
        {
          "name": "filteredPaths",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          }
        },
        {
          "name": "filteredListStyle",
          "propType": "object"
        },
        {
          "name": "resultRender",
          "propType": "func"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "CascaderSelect",
      "title": "CascaderSelect",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "CascaderSelect",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "选择框大小",
          "defaultValue": "medium"
        },
        {
          "name": "placeholder",
          "propType": "string",
          "description": "选择框占位符"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "hasArrow",
          "propType": "bool",
          "description": "是否有下拉箭头",
          "defaultValue": true
        },
        {
          "name": "hasBorder",
          "propType": "bool",
          "description": "是否有边框",
          "defaultValue": true
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否有清除按钮",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义内联 label"
        },
        {
          "name": "readOnly",
          "propType": "bool",
          "description": "是否只读，只读模式下可以展开弹层但不能选"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "选中值改变时触发的回调函数\n@param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组\n@param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点\n@param {Object} extra 额外参数\n@param {Array} extra.selectedPath 单选时选中的数据的路径\n@param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中\n@param {Object} extra.currentData 多选时当前操作的数据\n@param {Array} extra.checkedData 多选时所有被选中的数据\n@param {Array} extra.indeterminateData 多选时半选的数据"
        },
        {
          "name": "expandTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "展开触发的方式",
          "defaultValue": "click"
        },
        {
          "name": "onExpand",
          "propType": "func"
        },
        {
          "name": "useVirtual",
          "propType": "bool",
          "description": "是否开启虚拟滚动",
          "defaultValue": false
        },
        {
          "name": "multiple",
          "propType": "bool",
          "description": "是否多选",
          "defaultValue": false
        },
        {
          "name": "changeOnSelect",
          "propType": "bool",
          "description": "是否选中即发生改变, 该属性仅在单选模式下有效",
          "defaultValue": false
        },
        {
          "name": "canOnlyCheckLeaf",
          "propType": "bool",
          "description": "是否只能勾选叶子项的checkbox，该属性仅在多选模式下有效",
          "defaultValue": false
        },
        {
          "name": "checkStrictly",
          "propType": "bool",
          "description": "父子节点是否选中不关联",
          "defaultValue": false
        },
        {
          "name": "listStyle",
          "propType": "object",
          "description": "每列列表样式对象"
        },
        {
          "name": "listClassName",
          "propType": "string",
          "description": "每列列表类名"
        },
        {
          "name": "displayRender",
          "propType": "func",
          "description": "选择框单选时展示结果的自定义渲染函数\n@param {Array} label 选中路径的文本数组\n@return {ReactNode} 渲染在选择框中的内容\n@default 单选时：labelPath => labelPath.join(' / ')；多选时：labelPath => labelPath[labelPath.length - 1]"
        },
        {
          "name": "itemRender",
          "propType": "func",
          "description": "渲染 item 内容的方法\n@param {Object} item 渲染节点的item\n@return {ReactNode} item node"
        },
        {
          "name": "showSearch",
          "propType": "bool",
          "description": "是否显示搜索框",
          "defaultValue": false
        },
        {
          "name": "filter",
          "propType": "func",
          "description": "自定义搜索函数\n@param {String} searchValue 搜索的关键字\n@param {Array} path 节点路径\n@return {Boolean} 是否匹配\n@default 根据路径所有节点的文本值模糊匹配"
        },
        {
          "name": "resultRender",
          "propType": "func",
          "description": "搜索结果自定义渲染函数\n@param {String} searchValue 搜索的关键字\n@param {Array} path 匹配到的节点路径\n@return {ReactNode} 渲染的内容\n@default 按照节点文本 a / b / c 的模式渲染"
        },
        {
          "name": "resultAutoWidth",
          "propType": "bool",
          "description": "搜索结果列表是否和选择框等宽",
          "defaultValue": true
        },
        {
          "name": "notFoundContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "无数据时显示内容",
          "defaultValue": "Not Found"
        },
        {
          "name": "loadData",
          "propType": "func",
          "description": "异步加载数据函数\n@param {Object} data 当前点击异步加载的数据"
        },
        {
          "name": "header",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义下拉框头部"
        },
        {
          "name": "footer",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义下拉框底部"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "初始下拉框是否显示",
          "defaultValue": false
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "当前下拉框是否显示"
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "下拉框显示或关闭时触发事件的回调函数\n@param {Boolean} visible 是否显示\n@param {String} type 触发显示关闭的操作类型, fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "下拉框自定义样式对象"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "下拉框样式自定义类名"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "下拉框挂载的容器节点"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "透传到 Popup 的属性对象"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {Array<data>} value 选择值 { label: , value:}"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Checkbox",
      "title": "Checkbox",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Checkbox",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "id",
          "propType": "string",
          "description": "checkbox id, 挂载在input上"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内敛样式"
        },
        {
          "name": "checked",
          "propType": "bool",
          "description": "选中状态"
        },
        {
          "name": "defaultChecked",
          "propType": "bool",
          "description": "默认选中状态",
          "defaultValue": false
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "禁用"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "通过属性配置label，"
        },
        {
          "name": "indeterminate",
          "propType": "bool",
          "description": "Checkbox 的中间状态，只会影响到 Checkbox 的样式，并不影响其 checked 属性"
        },
        {
          "name": "defaultIndeterminate",
          "propType": "bool",
          "description": "Checkbox 的默认中间态，只会影响到 Checkbox 的样式，并不影响其 checked 属性",
          "defaultValue": false
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "状态变化时触发的事件\n@param {Boolean} checked 是否选中\n@param {Event} e Dom 事件对象"
        },
        {
          "name": "onMouseEnter",
          "propType": "func",
          "description": "鼠标进入enter事件\n@param {Event} e Dom 事件对象"
        },
        {
          "name": "onMouseLeave",
          "propType": "func",
          "description": "鼠标离开Leave事件\n@param {Event} e Dom 事件对象"
        },
        {
          "name": "value",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number"
            ]
          },
          "description": "checkbox 的value"
        },
        {
          "name": "name",
          "propType": "string",
          "description": "name"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        }
      ]
    },
    {
      "componentName": "CheckboxGroup",
      "title": "CheckboxGroup",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Checkbox",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Group"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内敛样式"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "整体禁用"
        },
        {
          "name": "value",
          "propType": {
            "type": "oneOfType",
            "value": [
              {
                "type": "instanceOf",
                "value": "array"
              },
              "string",
              "number"
            ]
          },
          "description": "被选中的值列表"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "oneOfType",
            "value": [
              {
                "type": "instanceOf",
                "value": "array"
              },
              "string",
              "number"
            ]
          },
          "description": "默认被选中的值列表"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "选中值改变时的事件\n@param {Array} value 选中项列表\n@param {Event} e Dom 事件对象"
        },
        {
          "name": "itemDirection",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          },
          "description": "子项目的排列方式\n- hoz: 水平排列 (default)\n- ver: 垂直排列",
          "defaultValue": "hoz"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        }
      ]
    },
    {
      "componentName": "Collapse",
      "title": "Collapse",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Collapse",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "组件接受行内样式"
        },
        {
          "name": "dataSource",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "使用数据模型构建"
        },
        {
          "name": "defaultExpandedKeys",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "默认展开keys"
        },
        {
          "name": "expandedKeys",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "受控展开keys"
        },
        {
          "name": "onExpand",
          "propType": "func",
          "description": "展开状态发升变化时候的回调"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "所有禁用"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "扩展class"
        },
        {
          "name": "accordion",
          "propType": "bool",
          "description": "手风琴模式，一次只能打开一个",
          "defaultValue": false
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "id",
          "propType": "string"
        },
        {
          "name": "rtl",
          "propType": "bool"
        }
      ]
    },
    {
      "componentName": "Panel",
      "title": "Panel",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Collapse",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Panel"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式类名的品牌前缀",
          "defaultValue": "next-"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "子组件接受行内样式"
        },
        {
          "name": "children",
          "propType": "any"
        },
        {
          "name": "isExpanded",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁止用户操作"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标题"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "扩展class"
        },
        {
          "name": "onClick",
          "propType": "func"
        },
        {
          "name": "id",
          "propType": "string"
        }
      ]
    },
    {
      "componentName": "ErrorBoundary",
      "title": "ErrorBoundary",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "ConfigProvider",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "ErrorBoundary"
      },
      "props": [
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "element"
          }
        },
        {
          "name": "afterCatch",
          "propType": "func",
          "description": "捕获错误后的自定义处理, 比如埋点上传\n@param {Object} error 错误\n@param {Object} errorInfo 错误详细信息"
        },
        {
          "name": "fallbackUI",
          "propType": "func",
          "description": "捕获错误后的展现 自定义组件\n@param {Object} error 错误\n@param {Object} errorInfo 错误详细信息\n@returns {Element} 捕获错误后的处理"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "DatePicker",
      "title": "DatePicker",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "DatePicker",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框内置标签"
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "success",
              "loading",
              "error"
            ]
          },
          "description": "输入框状态"
        },
        {
          "name": "placeholder",
          "propType": "string",
          "description": "输入提示"
        },
        {
          "name": "defaultVisibleMonth",
          "propType": "func",
          "description": "默认展现的月\n@return {MomentObject} 返回包含指定月份的 moment 对象实例"
        },
        {
          "name": "onVisibleMonthChange",
          "propType": "func"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "日期值（受控）moment 对象"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "初始日期值，moment 对象"
        },
        {
          "name": "format",
          "propType": "string",
          "description": "日期值的格式（用于限定用户输入和展示）",
          "defaultValue": "YYYY-MM-DD"
        },
        {
          "name": "showTime",
          "propType": {
            "type": "oneOfType",
            "value": [
              "object",
              "bool"
            ]
          },
          "description": "是否使用时间控件，传入 TimePicker 的属性 { defaultValue, format, ... }",
          "defaultValue": false
        },
        {
          "name": "resetTime",
          "propType": "bool",
          "description": "每次选择日期时是否重置时间（仅在 showTime 开启时有效）",
          "defaultValue": false
        },
        {
          "name": "disabledDate",
          "propType": "func",
          "description": "禁用日期函数\n@param {MomentObject} 日期值\n@param {String} view 当前视图类型，year: 年， month: 月, date: 日\n@return {Boolean} 是否禁用"
        },
        {
          "name": "footerRender",
          "propType": "func",
          "description": "自定义面板页脚\n@return {Node} 自定义的面板页脚组件"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "日期值改变时的回调\n@param {MomentObject|String} value 日期值"
        },
        {
          "name": "onOk",
          "propType": "func",
          "description": "点击确认按钮时的回调\n@return {MomentObject|String} 日期值"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "输入框尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用"
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否显示清空按钮",
          "defaultValue": true
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层显示状态"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否显示",
          "defaultValue": false
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层展示状态变化时的回调\n@param {Boolean} visible 弹层是否显示\n@param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "popupTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "弹层触发方式",
          "defaultValue": "click"
        },
        {
          "name": "popupAlign",
          "propType": "string",
          "description": "弹层对齐方式,具体含义见 OverLay文档",
          "defaultValue": "tl tl"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "弹层容器\n@param {Element} target 目标元素\n@return {Element} 弹层的容器元素"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层自定义样式"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层自定义样式类"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层其他属性"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "inputProps",
          "propType": "object",
          "description": "输入框其他属性"
        },
        {
          "name": "dateCellRender",
          "propType": "func",
          "description": "自定义日期渲染函数\n@param {Object} value 日期值（moment对象）\n@returns {ReactNode}"
        },
        {
          "name": "monthCellRender",
          "propType": "func",
          "description": "自定义月份渲染函数\n@param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n@returns {ReactNode}"
        },
        {
          "name": "yearCellRender",
          "propType": "func"
        },
        {
          "name": "dateInputAriaLabel",
          "propType": "string",
          "description": "日期输入框的 aria-label 属性"
        },
        {
          "name": "timeInputAriaLabel",
          "propType": "string",
          "description": "时间输入框的 aria-label 属性"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {MomentObject} value 日期"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "name",
          "propType": "string"
        },
        {
          "name": "popupComponent",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          }
        },
        {
          "name": "popupContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "disableChangeMode",
          "propType": "bool"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "RangePicker",
      "title": "RangePicker",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "DatePicker",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "RangePicker"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "date",
              "month",
              "year"
            ]
          },
          "description": "日期范围类型",
          "defaultValue": "date"
        },
        {
          "name": "defaultVisibleMonth",
          "propType": "func",
          "description": "默认展示的起始月份\n@return {MomentObject} 返回包含指定月份的 moment 对象实例"
        },
        {
          "name": "onVisibleMonthChange",
          "propType": "func"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "日期范围值数组 [moment, moment]"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "初始的日期范围值数组 [moment, moment]"
        },
        {
          "name": "format",
          "propType": "string",
          "description": "日期格式",
          "defaultValue": "YYYY-MM-DD"
        },
        {
          "name": "showTime",
          "propType": {
            "type": "oneOfType",
            "value": [
              "object",
              "bool"
            ]
          },
          "description": "是否使用时间控件，支持传入 TimePicker 的属性",
          "defaultValue": false
        },
        {
          "name": "resetTime",
          "propType": "bool",
          "description": "每次选择是否重置时间（仅在 showTime 开启时有效）",
          "defaultValue": false
        },
        {
          "name": "disabledDate",
          "propType": "func",
          "description": "禁用日期函数\n@param {MomentObject} 日期值\n@param {String} view 当前视图类型，year: 年， month: 月, date: 日\n@return {Boolean} 是否禁用"
        },
        {
          "name": "footerRender",
          "propType": "func",
          "description": "自定义面板页脚\n@return {Node} 自定义的面板页脚组件"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "日期范围值改变时的回调 [ MomentObject|String, MomentObject|String ]\n@param {Array<MomentObject|String>} value 日期值"
        },
        {
          "name": "onOk",
          "propType": "func",
          "description": "点击确认按钮时的回调 返回开始时间和结束时间`[ MomentObject|String, MomentObject|String ]`\n@return {Array} 日期范围"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框内置标签"
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "error",
              "loading",
              "success"
            ]
          },
          "description": "输入框状态"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "输入框尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用"
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否显示清空按钮",
          "defaultValue": true
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层显示状态"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否显示",
          "defaultValue": false
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层展示状态变化时的回调\n@param {Boolean} visible 弹层是否显示\n@param {String} type 触发弹层显示和隐藏的来源 okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "popupTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "弹层触发方式",
          "defaultValue": "click"
        },
        {
          "name": "popupAlign",
          "propType": "string",
          "description": "弹层对齐方式, 具体含义见 OverLay文档",
          "defaultValue": "tl tl"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "弹层容器\n@param {Element} target 目标元素\n@return {Element} 弹层的容器元素"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层自定义样式"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层自定义样式类"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层其他属性"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "inputProps",
          "propType": "object",
          "description": "输入框其他属性"
        },
        {
          "name": "dateCellRender",
          "propType": "func",
          "description": "自定义日期单元格渲染"
        },
        {
          "name": "monthCellRender",
          "propType": "func",
          "description": "自定义月份渲染函数\n@param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n@returns {ReactNode}"
        },
        {
          "name": "yearCellRender",
          "propType": "func"
        },
        {
          "name": "startDateInputAriaLabel",
          "propType": "string",
          "description": "开始日期输入框的 aria-label 属性"
        },
        {
          "name": "startTimeInputAriaLabel",
          "propType": "string",
          "description": "开始时间输入框的 aria-label 属性"
        },
        {
          "name": "endDateInputAriaLabel",
          "propType": "string",
          "description": "结束日期输入框的 aria-label 属性"
        },
        {
          "name": "endTimeInputAriaLabel",
          "propType": "string",
          "description": "结束时间输入框的 aria-label 属性"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {Array<MomentObject, MomentObject>} value 日期区间"
        },
        {
          "name": "disableChangeMode",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "ranges",
          "propType": "object"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "name",
          "propType": "string"
        },
        {
          "name": "popupComponent",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          }
        },
        {
          "name": "popupContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "MonthPicker",
      "title": "MonthPicker",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "DatePicker",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "MonthPicker"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框内置标签"
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "success",
              "loading",
              "error"
            ]
          },
          "description": "输入框状态"
        },
        {
          "name": "placeholder",
          "propType": "string",
          "description": "输入提示"
        },
        {
          "name": "defaultVisibleYear",
          "propType": "func",
          "description": "默认展现的年\n@return {MomentObject} 返回包含指定年份的 moment 对象实例"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "日期值（受控）moment 对象"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "初始日期值，moment 对象"
        },
        {
          "name": "format",
          "propType": "string",
          "description": "日期值的格式（用于限定用户输入和展示）",
          "defaultValue": "YYYY-MM"
        },
        {
          "name": "disabledDate",
          "propType": "func",
          "description": "禁用日期函数\n@param {MomentObject} 日期值\n@param {String} view 当前视图类型，year: 年， month: 月, date: 日\n@return {Boolean} 是否禁用"
        },
        {
          "name": "footerRender",
          "propType": "func",
          "description": "自定义面板页脚\n@return {Node} 自定义的面板页脚组件"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "日期值改变时的回调\n@param {MomentObject|String} value 日期值"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "输入框尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用"
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否显示清空按钮",
          "defaultValue": true
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层显示状态"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否显示"
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层展示状态变化时的回调\n@param {Boolean} visible 弹层是否显示\n@param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "popupTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "弹层触发方式",
          "defaultValue": "click"
        },
        {
          "name": "popupAlign",
          "propType": "string",
          "description": "弹层对齐方式, 具体含义见 OverLay文档",
          "defaultValue": "tl tl"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "弹层容器\n@param {Element} target 目标元素\n@return {Element} 弹层的容器元素"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层自定义样式"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层自定义样式类"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层其他属性"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "inputProps",
          "propType": "object",
          "description": "输入框其他属性"
        },
        {
          "name": "monthCellRender",
          "propType": "func",
          "description": "自定义月份渲染函数\n@param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n@returns {ReactNode}"
        },
        {
          "name": "yearCellRender",
          "propType": "func"
        },
        {
          "name": "dateInputAriaLabel",
          "propType": "string",
          "description": "日期输入框的 aria-label 属性"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {MomentObject} value 月份"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "name",
          "propType": "string"
        },
        {
          "name": "popupComponent",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          }
        },
        {
          "name": "popupContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "YearPicker",
      "title": "YearPicker",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "DatePicker",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "YearPicker"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框内置标签"
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "success",
              "loading",
              "error"
            ]
          },
          "description": "输入框状态"
        },
        {
          "name": "placeholder",
          "propType": "string",
          "description": "输入提示"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "日期值（受控）moment 对象"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "初始日期值，moment 对象"
        },
        {
          "name": "format",
          "propType": "string",
          "description": "日期值的格式（用于限定用户输入和展示）",
          "defaultValue": "YYYY"
        },
        {
          "name": "disabledDate",
          "propType": "func",
          "description": "禁用日期函数\n@param {MomentObject} 日期值\n@param {String} view 当前视图类型，year: 年， month: 月, date: 日\n@return {Boolean} 是否禁用"
        },
        {
          "name": "footerRender",
          "propType": "func",
          "description": "自定义面板页脚\n@return {Node} 自定义的面板页脚组件"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "日期值改变时的回调\n@param {MomentObject|String} value 日期值"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "输入框尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用"
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否显示清空按钮",
          "defaultValue": true
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层显示状态"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否显示"
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层展示状态变化时的回调\n@param {Boolean} visible 弹层是否显示\n@param {String} reason 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "popupTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "弹层触发方式",
          "defaultValue": "click"
        },
        {
          "name": "popupAlign",
          "propType": "string",
          "description": "弹层对齐方式, 具体含义见 OverLay文档",
          "defaultValue": "tl tl"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "弹层容器\n@param {Element} target 目标元素\n@return {Element} 弹层的容器元素"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层自定义样式"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层自定义样式类"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层其他属性"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "inputProps",
          "propType": "object",
          "description": "输入框其他属性"
        },
        {
          "name": "yearCellRender",
          "propType": "func"
        },
        {
          "name": "dateInputAriaLabel",
          "propType": "string",
          "description": "日期输入框的 aria-label 属性"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {MomentObject} value 年份"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "name",
          "propType": "string"
        },
        {
          "name": "popupComponent",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          }
        },
        {
          "name": "popupContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "WeekPicker",
      "title": "WeekPicker",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "DatePicker",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "WeekPicker"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框内置标签"
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "success",
              "loading",
              "error"
            ]
          },
          "description": "输入框状态"
        },
        {
          "name": "placeholder",
          "propType": "string",
          "description": "输入提示"
        },
        {
          "name": "defaultVisibleMonth",
          "propType": "func",
          "description": "默认展现的月\n@return {MomentObject} 返回包含指定月份的 moment 对象实例"
        },
        {
          "name": "onVisibleMonthChange",
          "propType": "func"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "日期值（受控）moment 对象"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "初始日期值，moment 对象"
        },
        {
          "name": "format",
          "propType": "string",
          "description": "日期值的格式（用于限定用户输入和展示）",
          "defaultValue": "YYYY-wo"
        },
        {
          "name": "disabledDate",
          "propType": "func",
          "description": "禁用日期函数\n@param {MomentObject} 日期值\n@param {String} view 当前视图类型，year: 年， month: 月, date: 日\n@return {Boolean} 是否禁用"
        },
        {
          "name": "footerRender",
          "propType": "func",
          "description": "自定义面板页脚\n@return {Node} 自定义的面板页脚组件"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "日期值改变时的回调\n@param {MomentObject|String} value 日期值"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "输入框尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用"
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否显示清空按钮",
          "defaultValue": true
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层显示状态"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否显示",
          "defaultValue": false
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层展示状态变化时的回调\n@param {Boolean} visible 弹层是否显示\n@param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "popupTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "弹层触发方式",
          "defaultValue": "click"
        },
        {
          "name": "popupAlign",
          "propType": "string",
          "description": "弹层对齐方式,具体含义见 OverLay文档",
          "defaultValue": "tl tl"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "弹层容器\n@param {Element} target 目标元素\n@return {Element} 弹层的容器元素"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层自定义样式"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层自定义样式类"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层其他属性"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "inputProps",
          "propType": "object",
          "description": "输入框其他属性"
        },
        {
          "name": "dateCellRender",
          "propType": "func",
          "description": "自定义日期渲染函数\n@param {Object} value 日期值（moment对象）\n@returns {ReactNode}"
        },
        {
          "name": "monthCellRender",
          "propType": "func",
          "description": "自定义月份渲染函数\n@param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n@returns {ReactNode}"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {MomentObject} value 年份"
        },
        {
          "name": "yearCellRender",
          "propType": "func"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "name",
          "propType": "string"
        },
        {
          "name": "popupComponent",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          }
        },
        {
          "name": "popupContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Dialog",
      "title": "Dialog",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Dialog",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "visible",
          "propType": "oneOfType",
          "description": "是否显示",
          "defaultValue": false
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标题"
        },
        {
          "name": "children",
          "propType": {
            "type": "oneOfType",
            "value": [
              "bool",
              {
                "type": "instanceOf",
                "value": "node"
              }
            ]
          },
          "description": "内容"
        },
        {
          "name": "footer",
          "propType": {
            "type": "oneOfType",
            "value": [
              "bool",
              {
                "type": "instanceOf",
                "value": "node"
              }
            ]
          },
          "description": "底部内容，设置为 false，则不进行显示\n@default [<Button type=\"primary\">确定</Button>, <Button>取消</Button>]"
        },
        {
          "name": "footerAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "left",
              "center",
              "right"
            ]
          },
          "description": "底部按钮的对齐方式",
          "defaultValue": "right"
        },
        {
          "name": "footerActions",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "指定确定按钮和取消按钮是否存在以及如何排列,<br><br>**可选值**：\n['ok', 'cancel']（确认取消按钮同时存在，确认按钮在左）\n['cancel', 'ok']（确认取消按钮同时存在，确认按钮在右）\n['ok']（只存在确认按钮）\n['cancel']（只存在取消按钮）",
          "defaultValue": [
            "ok",
            "cancel"
          ]
        },
        {
          "name": "onOk",
          "propType": "func",
          "description": "在点击确定按钮时触发的回调函数\n@param {Object} event 点击事件对象"
        },
        {
          "name": "onCancel",
          "propType": "func",
          "description": "在点击取消按钮时触发的回调函数\n@param {Object} event 点击事件对象"
        },
        {
          "name": "okProps",
          "propType": "object",
          "description": "应用于确定按钮的属性对象"
        },
        {
          "name": "cancelProps",
          "propType": "object",
          "description": "应用于取消按钮的属性对象"
        },
        {
          "name": "closeable",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "bool"
            ]
          },
          "description": "控制对话框关闭的方式，值可以为字符串或者布尔值，其中字符串是由以下值组成：\n**close** 表示点击关闭按钮可以关闭对话框\n**mask** 表示点击遮罩区域可以关闭对话框\n**esc** 表示按下 esc 键可以关闭对话框\n如 'close' 或 'close,esc,mask'\n如果设置为 true，则以上关闭方式全部生效\n如果设置为 false，则以上关闭方式全部失效",
          "defaultValue": "esc,close"
        },
        {
          "name": "onClose",
          "propType": "func",
          "description": "对话框关闭时触发的回调函数\n@param {String} trigger 关闭触发行为的描述字符串\n@param {Object} event 关闭时事件对象"
        },
        {
          "name": "afterClose",
          "propType": "func",
          "description": "对话框关闭后触发的回调函数, 如果有动画，则在动画结束后触发"
        },
        {
          "name": "hasMask",
          "propType": "bool",
          "description": "是否显示遮罩",
          "defaultValue": true
        },
        {
          "name": "animation",
          "propType": {
            "type": "oneOfType",
            "value": [
              "object",
              "bool"
            ]
          },
          "description": "显示隐藏时动画的播放方式\n@property {String} in 进场动画\n@property {String} out 出场动画"
        },
        {
          "name": "autoFocus",
          "propType": "bool",
          "description": "对话框弹出时是否自动获得焦点",
          "defaultValue": false
        },
        {
          "name": "align",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "bool"
            ]
          },
          "description": "对话框对齐方式, 具体见Overlay文档",
          "defaultValue": "cc cc"
        },
        {
          "name": "isFullScreen",
          "propType": "bool",
          "description": "当对话框高度超过浏览器视口高度时，是否显示所有内容而不是出现滚动条以保证对话框完整显示在浏览器视口内，该属性仅在对话框垂直水平居中时生效，即 align 被设置为 'cc cc' 时",
          "defaultValue": false
        },
        {
          "name": "shouldUpdatePosition",
          "propType": "bool",
          "description": "是否在对话框重新渲染时及时更新对话框位置，一般用于对话框高度变化后依然能保证原来的对齐方式",
          "defaultValue": false
        },
        {
          "name": "minMargin",
          "propType": "number",
          "description": "对话框距离浏览器顶部和底部的最小间距，align 被设置为 'cc cc' 并且 isFullScreen 被设置为 true 时不生效",
          "defaultValue": 40
        },
        {
          "name": "overlayProps",
          "propType": "object",
          "description": "透传到弹层组件的属性对象"
        },
        {
          "name": "locale",
          "propType": "object",
          "description": "自定义国际化文案对象\n@property {String} ok 确认按钮文案\n@property {String} cancel 取消按钮文案"
        },
        {
          "name": "height",
          "propType": "string",
          "description": "对话框的高度样式属性"
        },
        {
          "name": "popupContainer",
          "propType": "any"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true,
          "isModel": true
        }
      }
    },
    {
      "componentName": "Inner",
      "title": "Inner",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Dialog",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Inner"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "footer",
          "propType": {
            "type": "oneOfType",
            "value": [
              "bool",
              {
                "type": "instanceOf",
                "value": "node"
              }
            ]
          }
        },
        {
          "name": "footerAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "left",
              "center",
              "right"
            ]
          },
          "defaultValue": "right"
        },
        {
          "name": "footerActions",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "defaultValue": [
            "ok",
            "cancel"
          ]
        },
        {
          "name": "onOk",
          "propType": "func"
        },
        {
          "name": "onCancel",
          "propType": "func"
        },
        {
          "name": "okProps",
          "propType": "object"
        },
        {
          "name": "cancelProps",
          "propType": "object"
        },
        {
          "name": "closeable",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "onClose",
          "propType": "func"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "role",
          "propType": "string",
          "defaultValue": "dialog"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "height",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Dropdown",
      "title": "Dropdown",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Dropdown",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "弹层内容"
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层当前是否显示"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否显示",
          "defaultValue": false
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层显示或隐藏时触发的回调函数\n@param {Boolean} visible 弹层是否显示\n@param {String} type 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "trigger",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "触发弹层显示或者隐藏的元素"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "触发弹层显示或隐藏的操作类型，可以是 'click'，'hover'，或者它们组成的数组，如 ['hover', 'click']",
          "defaultValue": "hover"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "设置此属性，弹层无法显示或隐藏",
          "defaultValue": false
        },
        {
          "name": "align",
          "propType": "string",
          "description": "弹层相对于触发元素的定位, 详见 Overlay 的定位部分",
          "defaultValue": "tl bl"
        },
        {
          "name": "offset",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量\ne.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px",
          "defaultValue": [
            0,
            0
          ]
        },
        {
          "name": "delay",
          "propType": "number",
          "description": "弹层显示或隐藏的延时时间（以毫秒为单位），在 triggerType 被设置为 hover 时生效",
          "defaultValue": 200
        },
        {
          "name": "autoFocus",
          "propType": "bool",
          "description": "弹层打开时是否让其中的元素自动获取焦点"
        },
        {
          "name": "hasMask",
          "propType": "bool",
          "description": "是否显示遮罩",
          "defaultValue": false
        },
        {
          "name": "cache",
          "propType": "bool",
          "description": "隐藏时是否保留子节点",
          "defaultValue": false
        },
        {
          "name": "animation",
          "propType": {
            "type": "oneOfType",
            "value": [
              "object",
              "bool"
            ]
          },
          "description": "配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画\n@default { in: 'expandInDown', out: 'expandOutUp' }"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Form",
      "title": "Form",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Form",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "inline",
          "propType": "bool",
          "description": "内联表单"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "large",
              "medium",
              "small"
            ]
          },
          "description": "单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。\n@enumdesc 大, 中, 小",
          "defaultValue": "medium"
        },
        {
          "name": "fullWidth",
          "propType": "bool",
          "description": "单个 Item 中表单类组件宽度是否是100%"
        },
        {
          "name": "labelAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "top",
              "left",
              "inset"
            ]
          },
          "description": "标签的位置\n@enumdesc 上, 左, 内",
          "defaultValue": "left"
        },
        {
          "name": "labelTextAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "left",
              "right"
            ]
          },
          "description": "标签的左右对齐方式\n@enumdesc 左, 右"
        },
        {
          "name": "field",
          "propType": "any",
          "description": "field 实例, 传 false 会禁用 field"
        },
        {
          "name": "saveField",
          "propType": "func",
          "description": "保存 Form 自动生成的 field 对象"
        },
        {
          "name": "labelCol",
          "propType": "object",
          "description": "控制第一级 Item 的 labelCol"
        },
        {
          "name": "wrapperCol",
          "propType": "object",
          "description": "控制第一级 Item 的 wrapperCol"
        },
        {
          "name": "onSubmit",
          "propType": "func",
          "description": "form内有 `htmlType=\"submit\"` 的元素的时候会触发"
        },
        {
          "name": "children",
          "propType": "any",
          "description": "子元素"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "扩展class"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内联样式"
        },
        {
          "name": "value",
          "propType": "object",
          "description": "表单数值"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "表单变化回调\n@param {Object} values 表单数据\n@param {Object} item 详细\n@param {String} item.name 变化的组件名\n@param {String} item.value 变化的数据\n@param {Object} item.field field 实例"
        },
        {
          "name": "component",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "func"
            ]
          },
          "description": "设置标签类型",
          "defaultValue": "form"
        },
        {
          "name": "fieldOptions",
          "propType": "object"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "device",
          "propType": {
            "type": "oneOf",
            "value": [
              "phone",
              "tablet",
              "desktop"
            ]
          },
          "description": "预设屏幕宽度",
          "defaultValue": "desktop"
        },
        {
          "name": "responsive",
          "propType": "bool",
          "description": "是否开启内置的响应式布局 （使用ResponsiveGrid）"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否开启预览态"
        }
      ]
    },
    {
      "componentName": "Form.Item",
      "title": "Form.Item",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Form",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Item"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "label 标签的文本"
        },
        {
          "name": "labelCol",
          "propType": "object",
          "description": "label 标签布局，通 `<Col>` 组件，设置 span offset 值，如 {span: 8, offset: 16}，该项仅在垂直表单有效"
        },
        {
          "name": "wrapperCol",
          "propType": "object",
          "description": "需要为输入控件设置布局样式时，使用该属性，用法同 labelCol"
        },
        {
          "name": "help",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义提示信息，如不设置，则会根据校验规则自动生成."
        },
        {
          "name": "extra",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。 位于错误信息后面"
        },
        {
          "name": "validateState",
          "propType": {
            "type": "oneOf",
            "value": [
              "error",
              "success",
              "loading",
              "warning"
            ]
          },
          "description": "校验状态，如不设置，则会根据校验规则自动生成\n@enumdesc 失败, 成功, 校验中, 警告"
        },
        {
          "name": "hasFeedback",
          "propType": "bool",
          "description": "配合 validateState 属性使用，是否展示 success/loading 的校验状态图标, 目前只有Input支持",
          "defaultValue": false
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内联样式"
        },
        {
          "name": "id",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "oneOfType",
            "value": [
              {
                "type": "instanceOf",
                "value": "node"
              },
              "func"
            ]
          },
          "description": "node 或者 function(values)"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "large",
              "small",
              "medium"
            ]
          },
          "description": "单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。"
        },
        {
          "name": "fullWidth",
          "propType": "bool",
          "description": "单个 Item 中表单类组件宽度是否是100%"
        },
        {
          "name": "labelAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "top",
              "left",
              "inset"
            ]
          },
          "description": "标签的位置\n@enumdesc 上, 左, 内"
        },
        {
          "name": "labelTextAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "left",
              "right"
            ]
          },
          "description": "标签的左右对齐方式\n@enumdesc 左, 右"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "扩展class"
        },
        {
          "name": "required",
          "propType": "bool",
          "description": "[表单校验] 不能为空"
        },
        {
          "name": "asterisk",
          "propType": "bool",
          "description": "required 的星号是否显示"
        },
        {
          "name": "requiredMessage",
          "propType": "string",
          "description": "required 自定义错误信息"
        },
        {
          "name": "requiredTrigger",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "required 自定义触发方式"
        },
        {
          "name": "min",
          "propType": "number",
          "description": "[表单校验] 最小值"
        },
        {
          "name": "max",
          "propType": "number",
          "description": "[表单校验] 最大值"
        },
        {
          "name": "minmaxMessage",
          "propType": "string",
          "description": "min/max 自定义错误信息"
        },
        {
          "name": "minmaxTrigger",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "min/max 自定义触发方式"
        },
        {
          "name": "minLength",
          "propType": "number",
          "description": "[表单校验] 字符串最小长度 / 数组最小个数"
        },
        {
          "name": "maxLength",
          "propType": "number",
          "description": "[表单校验] 字符串最大长度 / 数组最大个数"
        },
        {
          "name": "minmaxLengthMessage",
          "propType": "string",
          "description": "minLength/maxLength 自定义错误信息"
        },
        {
          "name": "minmaxLengthTrigger",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "minLength/maxLength 自定义触发方式"
        },
        {
          "name": "length",
          "propType": "number",
          "description": "[表单校验] 字符串精确长度 / 数组精确个数"
        },
        {
          "name": "lengthMessage",
          "propType": "string",
          "description": "length 自定义错误信息"
        },
        {
          "name": "lengthTrigger",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "length 自定义触发方式"
        },
        {
          "name": "pattern",
          "propType": "any",
          "description": "正则校验"
        },
        {
          "name": "patternMessage",
          "propType": "string",
          "description": "pattern 自定义错误信息"
        },
        {
          "name": "patternTrigger",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "pattern 自定义触发方式"
        },
        {
          "name": "format",
          "propType": {
            "type": "oneOf",
            "value": [
              "number",
              "email",
              "url",
              "tel"
            ]
          },
          "description": "[表单校验] 四种常用的 pattern"
        },
        {
          "name": "formatMessage",
          "propType": "string",
          "description": "format 自定义错误信息"
        },
        {
          "name": "formatTrigger",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "format 自定义触发方式"
        },
        {
          "name": "validator",
          "propType": "func",
          "description": "[表单校验] 自定义校验函数"
        },
        {
          "name": "validatorTrigger",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "validator 自定义触发方式"
        },
        {
          "name": "autoValidate",
          "propType": "bool",
          "description": "是否修改数据时自动触发校验"
        },
        {
          "name": "device",
          "propType": {
            "type": "oneOf",
            "value": [
              "phone",
              "tablet",
              "desktop"
            ]
          },
          "description": "预设屏幕宽度"
        },
        {
          "name": "responsive",
          "propType": "bool"
        },
        {
          "name": "colSpan",
          "propType": "number",
          "description": "在响应式布局模式下，表单项占多少列"
        },
        {
          "name": "labelWidth",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number"
            ]
          },
          "description": "在响应式布局下，且label在左边时，label的宽度是多少",
          "defaultValue": 100
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否开启预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {any} value 根据包裹的组件的 value 类型而决定"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "Form.Submit",
      "title": "Form.Submit",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Form",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Submit"
      },
      "props": [
        {
          "name": "onClick",
          "propType": "func",
          "description": "点击提交后触发\n@param {Object} value 数据\n@param {Object} errors 错误数据\n@param {class} field 实例"
        },
        {
          "name": "validate",
          "propType": {
            "type": "oneOfType",
            "value": [
              "bool",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "是否校验/需要校验的 name 数组"
        },
        {
          "name": "field",
          "propType": "object",
          "description": "自定义 field (在 Form 内不需要设置)"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Form.Reset",
      "title": "Form.Reset",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Form",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Reset"
      },
      "props": [
        {
          "name": "names",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "自定义重置的字段"
        },
        {
          "name": "onClick",
          "propType": "func",
          "description": "点击提交后触发"
        },
        {
          "name": "toDefault",
          "propType": "bool",
          "description": "返回默认值"
        },
        {
          "name": "field",
          "propType": "object",
          "description": "自定义 field (在 Form 内不需要设置)"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Form.Error",
      "title": "Form.Error",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Form",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Error"
      },
      "props": [
        {
          "name": "name",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "表单名"
        },
        {
          "name": "field",
          "propType": "object",
          "description": "自定义 field (在 Form 内不需要设置)"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "oneOfType",
            "value": [
              {
                "type": "instanceOf",
                "value": "node"
              },
              "func"
            ]
          },
          "description": "自定义错误渲染, 可以是 node 或者 function(errors, state)"
        },
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        }
      ]
    },
    {
      "componentName": "Icon",
      "title": "Icon",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Icon",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "type",
          "propType": "string",
          "description": "指定显示哪种图标"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOfType",
            "value": [
              {
                "type": "oneOf",
                "value": [
                  "xxs",
                  "xs",
                  "small",
                  "medium",
                  "large",
                  "xl",
                  "xxl",
                  "xxxl",
                  "inherit"
                ]
              },
              "number"
            ]
          },
          "description": "指定图标大小\n<br/>**可选值**<br/> xxs, xs, small, medium, large, xl, xxl, xxxl, inherit",
          "defaultValue": "medium"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "prefix",
          "defaultValue": "next-"
        }
      ]
    },
    {
      "componentName": "Input",
      "title": "Input",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Input",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "label"
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否出现clear按钮"
        },
        {
          "name": "hasBorder",
          "propType": "bool",
          "description": "是否有边框",
          "defaultValue": true
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "error",
              "loading",
              "success",
              "warning"
            ]
          },
          "description": "状态\n@enumdesc 错误, 校验中, 成功, 警告"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "尺寸\n@enumdesc 小, 中, 大",
          "defaultValue": "medium"
        },
        {
          "name": "onPressEnter",
          "propType": "func",
          "description": "按下回车的回调"
        },
        {
          "name": "onClear",
          "propType": "func"
        },
        {
          "name": "htmlType",
          "propType": "string",
          "description": "原生type"
        },
        {
          "name": "htmlSize",
          "propType": "string"
        },
        {
          "name": "hint",
          "propType": "string",
          "description": "水印 (Icon的type类型，和hasClear占用一个地方)"
        },
        {
          "name": "innerBefore",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "文字前附加内容"
        },
        {
          "name": "innerAfter",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "文字后附加内容"
        },
        {
          "name": "addonBefore",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框前附加内容"
        },
        {
          "name": "addonAfter",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框后附加内容"
        },
        {
          "name": "addonTextBefore",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框前附加文字"
        },
        {
          "name": "addonTextAfter",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框后附加文字"
        },
        {
          "name": "autoComplete",
          "propType": "string",
          "description": "(原生input支持)",
          "defaultValue": "off"
        },
        {
          "name": "autoFocus",
          "propType": "bool",
          "description": "自动聚焦(原生input支持)"
        },
        {
          "name": "inputRender",
          "propType": "func"
        },
        {
          "name": "extra",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "innerBeforeClassName",
          "propType": "string"
        },
        {
          "name": "innerAfterClassName",
          "propType": "string"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Input.Password",
      "title": "Input.Password",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Input",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Password"
      },
      "props": [
        {
          "name": "showToggle",
          "propType": "bool",
          "description": "是否展示切换按钮",
          "defaultValue": true
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Input.TextArea",
      "title": "Input.TextArea",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Input",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "TextArea"
      },
      "props": [
        {
          "name": "hasBorder",
          "propType": "bool",
          "description": "是否有边框",
          "defaultValue": true
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "error",
              "warning"
            ]
          },
          "description": "状态\n@enumdesc 错误"
        },
        {
          "name": "autoHeight",
          "propType": {
            "type": "oneOfType",
            "value": [
              "bool",
              "object"
            ]
          },
          "description": "自动高度 true / {minRows: 2, maxRows: 4}",
          "defaultValue": false
        },
        {
          "name": "rows",
          "propType": "number",
          "description": "多行文本框高度 <br />(不要直接用height设置多行文本框的高度, ie9 10会有兼容性问题)",
          "defaultValue": 4
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Input.Group",
      "title": "Input.Group",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Input",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Group"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "addonBefore",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框前附加内容"
        },
        {
          "name": "addonBeforeClassName",
          "propType": "string",
          "description": "输入框前附加内容css"
        },
        {
          "name": "addonAfter",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "输入框后附加内容"
        },
        {
          "name": "addonAfterClassName",
          "propType": "string",
          "description": "输入框后额外css"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "description": "rtl"
        }
      ]
    },
    {
      "componentName": "Loading",
      "title": "Loading",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Loading",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "tip",
          "propType": "any",
          "description": "自定义内容"
        },
        {
          "name": "tipAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "right",
              "bottom"
            ]
          },
          "description": "自定义内容位置\n@enumdesc 出现在动画右边, 出现在动画下面",
          "defaultValue": "bottom"
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "loading 状态, 默认 true",
          "defaultValue": true
        },
        {
          "name": "onVisibleChange",
          "propType": "func"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义class"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内联样式"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "large",
              "medium"
            ]
          },
          "description": "设置动画尺寸\n@description 仅仅对默认动画效果起作用\n@enumdesc 大号, 中号",
          "defaultValue": "large"
        },
        {
          "name": "indicator",
          "propType": "any",
          "description": "自定义动画"
        },
        {
          "name": "color",
          "propType": "string",
          "description": "动画颜色"
        },
        {
          "name": "fullScreen",
          "propType": "bool",
          "description": "全屏展示"
        },
        {
          "name": "children",
          "propType": "any",
          "description": "子元素"
        },
        {
          "name": "inline",
          "propType": "bool",
          "description": "should loader be displayed inline",
          "defaultValue": true
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "animate",
          "defaultValue": null
        }
      ]
    },
    {
      "componentName": "Menu",
      "title": "Menu",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Menu",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "菜单项和子菜单"
        },
        {
          "name": "onItemClick",
          "propType": "func",
          "description": "点击菜单项触发的回调函数\n@param {String} key 点击的菜单项的 key 值\n@param {Object} item 点击的菜单项对象\n@param {Object} event 点击的事件对象"
        },
        {
          "name": "openKeys",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "当前打开的子菜单的 key 值"
        },
        {
          "name": "defaultOpenKeys",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "初始打开的子菜单的 key 值",
          "defaultValue": []
        },
        {
          "name": "defaultOpenAll",
          "propType": "bool",
          "description": "初始展开所有的子菜单，只在 mode 设置为 'inline' 以及 openMode 设置为 'multiple' 下生效，优先级高于 defaultOpenKeys",
          "defaultValue": false
        },
        {
          "name": "onOpen",
          "propType": "func",
          "description": "打开或关闭子菜单触发的回调函数\n@param {String} key 打开的所有子菜单的 key 值\n@param {Object} extra 额外参数\n@param {String} extra.key 当前操作子菜单的 key 值\n@param {Boolean} extra.open 是否是打开"
        },
        {
          "name": "mode",
          "propType": {
            "type": "oneOf",
            "value": [
              "inline",
              "popup"
            ]
          },
          "description": "子菜单打开的模式",
          "defaultValue": "inline"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "子菜单打开的触发行为",
          "defaultValue": "click"
        },
        {
          "name": "openMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "single",
              "multiple"
            ]
          },
          "description": "展开内连子菜单的模式，同时可以展开一个子菜单还是多个子菜单，该属性仅在 mode 为 inline 时生效",
          "defaultValue": "multiple"
        },
        {
          "name": "inlineIndent",
          "propType": "number",
          "description": "内连子菜单缩进距离",
          "defaultValue": 20
        },
        {
          "name": "inlineArrowDirection",
          "propType": {
            "type": "oneOf",
            "value": [
              "down",
              "right"
            ]
          },
          "defaultValue": "down"
        },
        {
          "name": "popupAutoWidth",
          "propType": "bool",
          "description": "是否自动让弹层的宽度和菜单项保持一致，如果弹层的宽度比菜单项小则和菜单项保持一致，如果宽度大于菜单项则不做处理",
          "defaultValue": false
        },
        {
          "name": "popupAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "follow",
              "outside"
            ]
          },
          "description": "弹层的对齐方式",
          "defaultValue": "follow"
        },
        {
          "name": "popupProps",
          "propType": {
            "type": "oneOfType",
            "value": [
              "object",
              "func"
            ]
          },
          "description": "弹层自定义 props"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹出子菜单自定义 className"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹出子菜单自定义 style"
        },
        {
          "name": "selectedKeys",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "当前选中菜单项的 key 值"
        },
        {
          "name": "defaultSelectedKeys",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "初始选中菜单项的 key 值",
          "defaultValue": []
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "选中或取消选中菜单项触发的回调函数\n@param {Array} selectedKeys 选中的所有菜单项的值\n@param {Object} item 选中或取消选中的菜单项\n@param {Object} extra 额外参数\n@param {Boolean} extra.select 是否是选中\n@param {Array} extra.key 菜单项的 key\n@param {Object} extra.label 菜单项的文本\n@param {Array} extra.keyPath 菜单项 key 的路径"
        },
        {
          "name": "selectMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "single",
              "multiple"
            ]
          },
          "description": "选中模式，单选还是多选，默认无值，不可选"
        },
        {
          "name": "shallowSelect",
          "propType": "bool",
          "description": "是否只能选择第一层菜单项（不能选择子菜单中的菜单项）",
          "defaultValue": false
        },
        {
          "name": "hasSelectedIcon",
          "propType": "bool",
          "description": "是否显示选中图标，如果设置为 false 需配合配置平台设置选中时的背景色以示区分",
          "defaultValue": true
        },
        {
          "name": "labelToggleChecked",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "isSelectIconRight",
          "propType": "bool",
          "description": "是否将选中图标居右，仅当 hasSelectedIcon 为true 时生效。\n注意：SubMenu 上的选中图标一直居左，不受此API控制",
          "defaultValue": false
        },
        {
          "name": "direction",
          "propType": {
            "type": "oneOf",
            "value": [
              "ver",
              "hoz"
            ]
          },
          "description": "菜单第一层展示方向",
          "defaultValue": "ver"
        },
        {
          "name": "hozAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "left",
              "right"
            ]
          },
          "description": "横向菜单条 item 和 footer 的对齐方向，在 direction 设置为 'hoz' 并且 header 存在时生效",
          "defaultValue": "left"
        },
        {
          "name": "hozInLine",
          "propType": "bool",
          "description": "横向菜单模式下，是否维持在一行，即超出一行折叠成 SubMenu 显示， 仅在 direction='hoz' mode='popup' 时生效",
          "defaultValue": false
        },
        {
          "name": "renderMore",
          "propType": "func"
        },
        {
          "name": "header",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义菜单头部"
        },
        {
          "name": "footer",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义菜单尾部"
        },
        {
          "name": "autoFocus",
          "propType": "bool",
          "description": "是否自动获得焦点",
          "defaultValue": false
        },
        {
          "name": "focusedKey",
          "propType": "string",
          "description": "当前获得焦点的子菜单或菜单项 key 值"
        },
        {
          "name": "focusable",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "onItemFocus",
          "propType": "func"
        },
        {
          "name": "onBlur",
          "propType": "func"
        },
        {
          "name": "embeddable",
          "propType": "bool",
          "description": "是否开启嵌入式模式，一般用于Layout的布局中，开启后没有默认背景、外层border、box-shadow，可以配合`<Menu style={{lineHeight: '100px'}}>` 自定义高度",
          "defaultValue": false
        },
        {
          "name": "onItemKeyDown",
          "propType": "func"
        },
        {
          "name": "expandAnimation",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "itemClassName",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "SubMenu",
      "title": "SubMenu",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Menu",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "SubMenu"
      },
      "props": [
        {
          "name": "_key",
          "propType": "string"
        },
        {
          "name": "root",
          "propType": "object"
        },
        {
          "name": "level",
          "propType": "number"
        },
        {
          "name": "inlineLevel",
          "propType": "number"
        },
        {
          "name": "groupIndent",
          "propType": "number",
          "defaultValue": 0
        },
        {
          "name": "noIcon",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标签内容"
        },
        {
          "name": "selectable",
          "propType": "bool",
          "description": "是否可选，该属性仅在设置 Menu 组件 selectMode 属性后生效",
          "defaultValue": false
        },
        {
          "name": "mode",
          "propType": {
            "type": "oneOf",
            "value": [
              "inline",
              "popup"
            ]
          },
          "description": "子菜单打开方式，如果设置会覆盖 Menu 上的同名属性\n@default Menu 的 mode 属性值"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "菜单项或下一级子菜单"
        },
        {
          "name": "onMouseEnter",
          "propType": "func"
        },
        {
          "name": "onMouseLeave",
          "propType": "func"
        },
        {
          "name": "subMenuContentClassName",
          "propType": "string"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          }
        },
        {
          "name": "align",
          "propType": {
            "type": "oneOf",
            "value": [
              "outside",
              "follow"
            ]
          }
        },
        {
          "name": "parentMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "inline",
              "popup"
            ]
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Menu.Item",
      "title": "SelectableItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Menu",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Item"
      },
      "props": [
        {
          "name": "_key",
          "propType": "string"
        },
        {
          "name": "root",
          "propType": "object"
        },
        {
          "name": "selected",
          "propType": "bool"
        },
        {
          "name": "onSelect",
          "propType": "func"
        },
        {
          "name": "inlineIndent",
          "propType": "number"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "helper",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "帮助文本"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "菜单项标签内容"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "onKeyDown",
          "propType": "func"
        },
        {
          "name": "onClick",
          "propType": "func"
        },
        {
          "name": "needIndent",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "hasSelectedIcon",
          "propType": "bool"
        },
        {
          "name": "isSelectIconRight",
          "propType": "bool"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "CheckboxItem",
      "title": "CheckboxItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Menu",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "CheckboxItem"
      },
      "props": [
        {
          "name": "checked",
          "propType": "bool",
          "description": "是否选中",
          "defaultValue": false
        },
        {
          "name": "indeterminate",
          "propType": "bool",
          "description": "是否半选中",
          "defaultValue": false
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "选中或取消选中触发的回调函数\n@param {Boolean} checked 是否选中\n@param {Object} event 选中事件对象"
        },
        {
          "name": "helper",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "帮助文本"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标签内容"
        },
        {
          "name": "checkboxDisabled",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "RadioItem",
      "title": "RadioItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Menu",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "RadioItem"
      },
      "props": [
        {
          "name": "checked",
          "propType": "bool",
          "description": "是否选中",
          "defaultValue": false
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "选中或取消选中触发的回调函数\n@param {Boolean} checked 是否选中\n@param {Object} event 选中事件对象"
        },
        {
          "name": "helper",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "帮助文本"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标签内容"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "PopupItem",
      "title": "PopupItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Menu",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "PopupItem"
      },
      "props": [
        {
          "name": "_key",
          "propType": "string"
        },
        {
          "name": "root",
          "propType": "object"
        },
        {
          "name": "level",
          "propType": "number"
        },
        {
          "name": "hasSubMenu",
          "propType": "bool"
        },
        {
          "name": "noIcon",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "selectable",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标签内容"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义弹层内容"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          }
        },
        {
          "name": "align",
          "propType": {
            "type": "oneOf",
            "value": [
              "outside",
              "follow"
            ]
          }
        },
        {
          "name": "autoWidth",
          "propType": "bool"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Menu.Group",
      "title": "Menu.Group",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Menu",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Group"
      },
      "props": [
        {
          "name": "root",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标签内容"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "菜单项"
        },
        {
          "name": "parentMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "inline",
              "popup"
            ]
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Divider",
      "title": "Divider",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Menu",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Divider"
      },
      "props": [
        {
          "name": "root",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "MenuButton",
      "title": "MenuButton",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "MenuButton",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "按钮上的文本内容"
        },
        {
          "name": "autoWidth",
          "propType": "bool",
          "description": "弹层是否与按钮宽度相同",
          "defaultValue": true
        },
        {
          "name": "popupTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "弹层触发方式",
          "defaultValue": "click"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "弹层容器"
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层展开状态"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否展开"
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层在显示和隐藏触发的事件"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层自定义样式"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层自定义样式类"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层属性透传"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "defaultSelectedKeys",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "默认激活的菜单项（用法同 Menu 非受控）",
          "defaultValue": []
        },
        {
          "name": "selectedKeys",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "激活的菜单项（用法同 Menu 受控）"
        },
        {
          "name": "selectMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "single",
              "multiple"
            ]
          },
          "description": "菜单的选择模式，同 Menu"
        },
        {
          "name": "onItemClick",
          "propType": "func",
          "description": "点击菜单项后的回调，同 Menu"
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "选择菜单后的回调，同 Menu"
        },
        {
          "name": "menuProps",
          "propType": "object",
          "description": "菜单属性透传"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": "any"
        }
      ]
    },
    {
      "componentName": "Message",
      "title": "Message",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Message",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "success",
              "warning",
              "error",
              "notice",
              "help",
              "loading"
            ]
          },
          "description": "反馈类型",
          "defaultValue": "success"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "inline",
              "addon",
              "toast"
            ]
          },
          "description": "反馈外观",
          "defaultValue": "inline"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "medium",
              "large"
            ]
          },
          "description": "反馈大小",
          "defaultValue": "medium"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标题"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "内容"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "默认是否显示",
          "defaultValue": true
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "当前是否显示"
        },
        {
          "name": "iconType",
          "propType": "string",
          "description": "显示的图标类型，会覆盖内部设置的IconType"
        },
        {
          "name": "closeable",
          "propType": "bool",
          "description": "显示关闭按钮",
          "defaultValue": false
        },
        {
          "name": "onClose",
          "propType": "func",
          "description": "关闭按钮的回调"
        },
        {
          "name": "afterClose",
          "propType": "func",
          "description": "关闭之后调用的函数"
        },
        {
          "name": "animation",
          "propType": "bool",
          "description": "是否开启展开收起动画",
          "defaultValue": true
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "rtl",
          "propType": "bool"
        }
      ]
    },
    {
      "componentName": "Nav",
      "title": "Nav",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Nav",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "导航项和子导航"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "primary",
              "secondary",
              "line"
            ]
          },
          "description": "导航类型\n@enumdesc 普通, 主要, 次要, 线形",
          "defaultValue": "normal"
        },
        {
          "name": "direction",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          },
          "description": "导航布局\n@enumdesc 水平, 垂直",
          "defaultValue": "ver"
        },
        {
          "name": "hozAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "left",
              "right"
            ]
          },
          "description": "横向导航条 items 和 footer 的对齐方向，在 direction 设置为 'hoz' 并且 header 存在时生效",
          "defaultValue": "left"
        },
        {
          "name": "activeDirection",
          "propType": {
            "type": "oneOf",
            "value": [
              null,
              "top",
              "bottom",
              "left",
              "right"
            ]
          },
          "description": "设置组件选中状态的 active 边方向\n@enumdesc 无, 上, 下, 左, 右\n@default 当 direction 为 'hoz' 时，默认值为 'bottom'，当 direction 为 'ver' 时，默认值为 'left'"
        },
        {
          "name": "mode",
          "propType": {
            "type": "oneOf",
            "value": [
              "inline",
              "popup"
            ]
          },
          "description": "子导航打开的模式（水平导航只支持弹出）\n@eumdesc 行内, 弹出",
          "defaultValue": "inline"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "子导航打开的触发方式",
          "defaultValue": "click"
        },
        {
          "name": "inlineIndent",
          "propType": "number",
          "description": "内联子导航缩进距离",
          "defaultValue": 20
        },
        {
          "name": "defaultOpenAll",
          "propType": "bool",
          "description": "初始展开所有的子导航，只在 mode 设置为 'inline' 以及 openMode 设置为 'multiple' 下生效",
          "defaultValue": false
        },
        {
          "name": "openMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "single",
              "multiple"
            ]
          },
          "description": "内联子导航的展开模式，同时可以展开一个同级子导航还是多个同级子导航，该属性仅在 mode 为 inline 时生效\n@eumdesc 一个, 多个",
          "defaultValue": "multiple"
        },
        {
          "name": "selectedKeys",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "当前选中导航项的 key 值"
        },
        {
          "name": "defaultSelectedKeys",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "array"
              }
            ]
          },
          "description": "初始选中导航项的 key 值",
          "defaultValue": []
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "选中或取消选中导航项触发的回调函数\n@param {Array} selectedKeys 选中的所有导航项的 key\n@param {Object} item 选中或取消选中的导航项\n@param {Object} extra 额外参数\n@param {Boolean} extra.select 是否是选中\n@param {Array} extra.key 导航项的 key\n@param {Object} extra.label 导航项的文本\n@param {Array} extra.keyPath 导航项 key 的路径"
        },
        {
          "name": "popupAlign",
          "propType": {
            "type": "oneOf",
            "value": [
              "follow",
              "outside"
            ]
          },
          "description": "弹出子导航的对齐方式（水平导航只支持 follow ）\n@eumdesc Item 顶端对齐, Nav 顶端对齐",
          "defaultValue": "follow"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹出子导航的自定义类名"
        },
        {
          "name": "iconOnly",
          "propType": "bool",
          "description": "是否只显示图标"
        },
        {
          "name": "hasArrow",
          "propType": "bool",
          "description": "是否显示右侧的箭头（仅在 iconOnly=true 时生效）",
          "defaultValue": true
        },
        {
          "name": "hasTooltip",
          "propType": "bool",
          "description": "是否有 ToolTips （仅在 iconOnly=true 时生效）",
          "defaultValue": false
        },
        {
          "name": "header",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义导航头部"
        },
        {
          "name": "footer",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义导航尾部"
        },
        {
          "name": "embeddable",
          "propType": "bool",
          "description": "是否开启嵌入式模式，一般用于Layout的布局中，开启后没有默认背景、外层border、box-shadow，可以配合`<Nav style={{lineHeight: '100px'}}>` 自定义高度",
          "defaultValue": false
        },
        {
          "name": "popupProps",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Item",
      "title": "Item",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Nav",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Item"
      },
      "props": [
        {
          "name": "icon",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "node"
              }
            ]
          },
          "description": "自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type=\"icon type\" />`"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "导航内容"
        },
        {
          "name": "parentMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "inline",
              "popup"
            ]
          }
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Group",
      "title": "Group",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Nav",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Group"
      },
      "props": [
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标签内容"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "导航项和子导航"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "SubNav",
      "title": "SubNav",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Nav",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "SubNav"
      },
      "props": [
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "icon",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "node"
              }
            ]
          },
          "description": "自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type=\"your type\" />`"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标签内容"
        },
        {
          "name": "selectable",
          "propType": "bool",
          "description": "是否可选",
          "defaultValue": false
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "导航项和子导航"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "PopupItem",
      "title": "PopupItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Nav",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "PopupItem"
      },
      "props": [
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "icon",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              {
                "type": "instanceOf",
                "value": "node"
              }
            ]
          },
          "description": "自定义图标，可以使用 Icon 的 type, 也可以使用组件 `<Icon type=\"icon type\" />`"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标签内容"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "弹出内容"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "NumberPicker",
      "title": "NumberPicker",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "NumberPicker",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "inline"
            ]
          },
          "description": "设置类型\n@enumdesc 普通, 内联",
          "defaultValue": "normal"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "large",
              "medium"
            ]
          },
          "description": "大小",
          "defaultValue": "medium"
        },
        {
          "name": "value",
          "propType": "number",
          "description": "当前值"
        },
        {
          "name": "defaultValue",
          "propType": "number",
          "description": "默认值"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用"
        },
        {
          "name": "step",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              "string"
            ]
          },
          "description": "步长",
          "defaultValue": 1
        },
        {
          "name": "precision",
          "propType": "number",
          "description": "保留小数点后位数",
          "defaultValue": 0
        },
        {
          "name": "editable",
          "propType": "bool",
          "description": "用户是否可以输入",
          "defaultValue": true
        },
        {
          "name": "autoFocus",
          "propType": "bool",
          "description": "自动焦点"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "数值被改变的事件\n@param {Number} value 数据\n@param {Event} e DOM事件对象"
        },
        {
          "name": "onKeyDown",
          "propType": "func",
          "description": "键盘按下"
        },
        {
          "name": "onFocus",
          "propType": "func",
          "description": "焦点获得"
        },
        {
          "name": "onBlur",
          "propType": "func",
          "description": "焦点失去"
        },
        {
          "name": "onCorrect",
          "propType": "func",
          "description": "数值订正后的回调\n@param {Object} obj {currentValue,oldValue:String}"
        },
        {
          "name": "onDisabled",
          "propType": "func"
        },
        {
          "name": "max",
          "propType": "number",
          "description": "最大值",
          "defaultValue": null
        },
        {
          "name": "min",
          "propType": "number",
          "description": "最小值",
          "defaultValue": null
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义class"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内联样式"
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "error"
            ]
          }
        },
        {
          "name": "format",
          "propType": "func",
          "description": "格式化当前值\n@param {Number} value\n@return {String|Number}"
        },
        {
          "name": "upBtnProps",
          "propType": "object",
          "description": "增加按钮的props"
        },
        {
          "name": "downBtnProps",
          "propType": "object",
          "description": "减少按钮的props"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "内联 label"
        },
        {
          "name": "innerAfter",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "inner after"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        },
        {
          "name": "device",
          "propType": {
            "type": "oneOf",
            "value": [
              "phone",
              "tablet",
              "desktop"
            ]
          },
          "description": "预设屏幕宽度"
        }
      ]
    },
    {
      "componentName": "Pagination",
      "title": "Pagination",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Pagination",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "device",
          "propType": {
            "type": "oneOf",
            "value": [
              "desktop",
              "tablet",
              "phone"
            ]
          }
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "locale",
          "propType": "object",
          "description": "自定义国际化文案对象"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "simple",
              "mini"
            ]
          },
          "description": "分页组件类型",
          "defaultValue": "normal"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "arrow-only",
              "arrow-prev-only",
              "no-border"
            ]
          },
          "description": "前进后退按钮样式",
          "defaultValue": "normal"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "分页组件大小",
          "defaultValue": "medium"
        },
        {
          "name": "current",
          "propType": "number",
          "description": "（受控）当前页码"
        },
        {
          "name": "defaultCurrent",
          "propType": "number",
          "description": "（非受控）初始页码",
          "defaultValue": 1
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "页码发生改变时的回调函数\n@param {Number} current 改变后的页码数\n@param {Object} e 点击事件对象"
        },
        {
          "name": "total",
          "propType": "number",
          "description": "总记录数",
          "defaultValue": 100
        },
        {
          "name": "totalRender",
          "propType": "func",
          "description": "总数的渲染函数\n@param {Number} total 总数\n@param {Array} range 当前数据在总数中的区间"
        },
        {
          "name": "pageShowCount",
          "propType": "number",
          "description": "页码显示的数量，更多的使用...代替",
          "defaultValue": 5
        },
        {
          "name": "pageSize",
          "propType": "number",
          "description": "一页中的记录数",
          "defaultValue": 10
        },
        {
          "name": "pageSizeSelector",
          "propType": {
            "type": "oneOf",
            "value": [
              false,
              "filter",
              "dropdown"
            ]
          },
          "description": "每页显示选择器类型",
          "defaultValue": false
        },
        {
          "name": "pageNumberRender",
          "propType": "func",
          "description": "自定义页码渲染函数，函数作用于页码button以及当前页/总页数的数字渲染\n@param {Number} index 分页的页码，从1开始\n@return {ReactNode} 返回渲染结果"
        },
        {
          "name": "pageSizePosition",
          "propType": {
            "type": "oneOf",
            "value": [
              "start",
              "end"
            ]
          },
          "description": "每页显示选择器在组件中的位置",
          "defaultValue": "start"
        },
        {
          "name": "useFloatLayout",
          "propType": "bool",
          "description": "存在每页显示选择器时是否使用浮动布局",
          "defaultValue": false
        },
        {
          "name": "onPageSizeChange",
          "propType": "func",
          "description": "每页显示记录数量改变时的回调函数\n@param {Number} pageSize 改变后的每页显示记录数"
        },
        {
          "name": "hideOnlyOnePage",
          "propType": "bool",
          "description": "当分页数为1时，是否隐藏分页器",
          "defaultValue": false
        },
        {
          "name": "showJump",
          "propType": "bool",
          "description": "type 设置为 normal 时，在页码数超过5页后，会显示跳转输入框与按钮，当设置 showJump 为 false 时，不再显示该跳转区域",
          "defaultValue": true
        },
        {
          "name": "link",
          "propType": "string",
          "description": "设置页码按钮的跳转链接，它的值为一个包含 {page} 的模版字符串，如：http://www.taobao.com/{page}"
        },
        {
          "name": "selectPopupContiner",
          "propType": "any"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层组件属性，透传给Popup"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Progress",
      "title": "Progress",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Progress",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "circle",
              "line"
            ]
          },
          "description": "形态",
          "defaultValue": "line"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "percent",
          "propType": "number",
          "description": "所占百分比",
          "defaultValue": 0
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "success",
              "error"
            ]
          },
          "description": "进度状态, 显示优先级: color > progressive > state",
          "defaultValue": "normal"
        },
        {
          "name": "progressive",
          "propType": "bool",
          "description": "是否为色彩阶段变化模式, 显示优先级: color > progressive > state",
          "defaultValue": false
        },
        {
          "name": "hasBorder",
          "propType": "bool",
          "description": "是否添加 Border（只适用于 Line Progress)",
          "defaultValue": false
        },
        {
          "name": "textRender",
          "propType": "func",
          "description": "文本渲染函数\n@param {Number} percent 当前的进度信息\n@param {Object} option 额外的参数\n@property {Boolean} option.rtl 是否在rtl 模式下渲染\n@return {ReactNode} 返回文本节点"
        },
        {
          "name": "color",
          "propType": "string",
          "description": "进度条颜色, 显示优先级: color > progressive > state"
        },
        {
          "name": "backgroundColor",
          "propType": "color",
          "description": "背景色"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Radio",
      "title": "Radio",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Radio",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "id",
          "propType": "string",
          "description": "组件input的id"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内敛样式"
        },
        {
          "name": "checked",
          "propType": "bool",
          "description": "设置radio是否选中"
        },
        {
          "name": "defaultChecked",
          "propType": "bool",
          "description": "设置radio是否默认选中"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "通过属性配置label"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "状态变化时触发的事件\n@param {Boolean} checked 是否选中\n@param {Event} e Dom 事件对象"
        },
        {
          "name": "onMouseEnter",
          "propType": "func",
          "description": "鼠标进入enter事件\n@param {Event} e Dom 事件对象"
        },
        {
          "name": "onMouseLeave",
          "propType": "func",
          "description": "鼠标离开事件\n@param {Event} e Dom 事件对象"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "radio是否被禁用"
        },
        {
          "name": "value",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number",
              "bool"
            ]
          },
          "description": "radio 的value"
        },
        {
          "name": "name",
          "propType": "string",
          "description": "name"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        },
        {
          "name": "tabIndex",
          "defaultValue": 0
        },
        {
          "name": "prefix",
          "defaultValue": "next-"
        }
      ]
    },
    {
      "componentName": "RadioGroup",
      "title": "RadioGroup",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Radio",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Group"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式类名的品牌前缀",
          "defaultValue": "next-"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内敛样式"
        },
        {
          "name": "name",
          "propType": "string",
          "description": "name"
        },
        {
          "name": "value",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number",
              "bool"
            ]
          },
          "description": "radio group的选中项的值"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number",
              "bool"
            ]
          },
          "description": "radio group的默认值"
        },
        {
          "name": "component",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "func"
            ]
          },
          "description": "设置标签类型",
          "defaultValue": "div"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "选中值改变时的事件\n@param {String/Number} value 选中项的值\n@param {Event} e Dom 事件对象"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "表示radio被禁用"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "button"
            ]
          },
          "description": "可以设置成 button 展示形状\n@enumdesc 按钮状"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "large",
              "medium",
              "small"
            ]
          },
          "description": "与 `shape` 属性配套使用，shape设为button时有效\n@enumdesc 大, 中, 小",
          "defaultValue": "medium"
        },
        {
          "name": "itemDirection",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          },
          "description": "子项目的排列方式\n- hoz: 水平排列 (default)\n- ver: 垂直排列",
          "defaultValue": "hoz"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        }
      ]
    },
    {
      "componentName": "Range",
      "title": "Range",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Range",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式类名的品牌前缀",
          "defaultValue": "next-"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内敛样式"
        },
        {
          "name": "slider",
          "propType": {
            "type": "oneOf",
            "value": [
              "single",
              "double"
            ]
          },
          "description": "滑块个数\n@enumdesc 单个, 两个",
          "defaultValue": "single"
        },
        {
          "name": "min",
          "propType": "number",
          "description": "最小值",
          "defaultValue": 0
        },
        {
          "name": "max",
          "propType": "number",
          "description": "最大值",
          "defaultValue": 100
        },
        {
          "name": "step",
          "propType": "number",
          "description": "步长，取值必须大于 0，并且可被 (max - min) 整除。",
          "defaultValue": 1
        },
        {
          "name": "marksPosition",
          "propType": {
            "type": "oneOf",
            "value": [
              "above",
              "below"
            ]
          },
          "description": "marks显示在上方('above')or下方('below')",
          "defaultValue": "above"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "值为 `true` 时，滑块为禁用状态",
          "defaultValue": false
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "当 Range 的值发生改变后，会触发 onChange 事件，并把改变后的值作为参数传入, 如果设置了value, 要配合此函数做受控使用\n@param {String/number} value"
        },
        {
          "name": "onProcess",
          "propType": "func",
          "description": "滑块拖动的时候触发的事件,不建议在这里setState, 一般情况下不需要用, 滑动时有特殊需求时使用\n@param {String/number} value"
        },
        {
          "name": "hasTip",
          "propType": "bool",
          "description": "是否显示 tip",
          "defaultValue": true
        },
        {
          "name": "tipRender",
          "propType": "func",
          "description": "自定义 tip 显示内容\n@param {Number|String} value 值\n@return {ReactNode} 显示内容"
        },
        {
          "name": "id",
          "propType": "string"
        },
        {
          "name": "reverse",
          "propType": "bool",
          "description": "选中态反转",
          "defaultValue": false
        },
        {
          "name": "pure",
          "propType": "bool",
          "description": "是否pure render",
          "defaultValue": false
        },
        {
          "name": "fixedWidth",
          "propType": "bool",
          "description": "是否为拖动线段类型,默认slider为double, defaultValue必传且指定区间",
          "defaultValue": false
        },
        {
          "name": "tooltipVisible",
          "propType": "bool",
          "description": "tooltip是否默认展示",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool",
          "description": "是否已rtl模式展示",
          "defaultValue": false
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        },
        {
          "name": "value",
          "propType": "number",
          "description": "分值"
        }
      ]
    },
    {
      "componentName": "Rating",
      "title": "Rating",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Rating",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "defaultValue",
          "propType": "number",
          "description": "默认值",
          "defaultValue": 0
        },
        {
          "name": "value",
          "propType": "number",
          "description": "值"
        },
        {
          "name": "count",
          "propType": "number",
          "description": "评分的总数",
          "defaultValue": 5
        },
        {
          "name": "showGrade",
          "propType": "bool",
          "description": "是否显示 grade",
          "defaultValue": false
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "allowHalf",
          "propType": "bool",
          "description": "是否允许半星评分",
          "defaultValue": false
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "用户点击评分时触发的回调\n@param {String} value 评分值"
        },
        {
          "name": "onHoverChange",
          "propType": "func",
          "description": "用户hover评分时触发的回调\n@param {String} value 评分值"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "readAs",
          "propType": "func",
          "description": "评分文案生成方法，传入id支持无障碍时，读屏软件可读"
        },
        {
          "name": "iconType",
          "propType": "string",
          "defaultValue": "favorites-filling"
        },
        {
          "name": "strokeMode",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "id",
          "propType": "string"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "locale",
          "propType": "object",
          "description": "自定义国际化文案对象"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        },
        {
          "name": "readOnly",
          "propType": "bool",
          "description": "是否为只读态，效果上同 disabeld",
          "defaultValue": false
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Search",
      "title": "Search",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Search",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "simple"
            ]
          },
          "description": "形状",
          "defaultValue": "normal"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "primary",
              "secondary",
              "normal",
              "dark"
            ]
          },
          "description": "类型 shape=normal: primary/secondary; shape=simple: normal/dark;",
          "defaultValue": "normal"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "large",
              "medium"
            ]
          },
          "description": "大小\n@enumdesc '大', '小'",
          "defaultValue": "medium"
        },
        {
          "name": "defaultValue",
          "propType": "string",
          "description": "搜索框默认值"
        },
        {
          "name": "value",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number"
            ]
          },
          "description": "搜索框数值"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "输入关键字时的回掉\n@param {Object} value 输入值"
        },
        {
          "name": "onSearch",
          "propType": "func",
          "description": "点击搜索按钮触发的回调\n@param {String} value 输入值\n@param {String} filterValue 选项值"
        },
        {
          "name": "defaultFilterValue",
          "propType": "string",
          "description": "选择器默认值"
        },
        {
          "name": "filter",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "选择器",
          "defaultValue": []
        },
        {
          "name": "filterValue",
          "propType": "string",
          "description": "选择器值"
        },
        {
          "name": "onFilterChange",
          "propType": "func",
          "description": "选择器发生变化时回调\n@param {Object} filter value"
        },
        {
          "name": "dataSource",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "搜索框下拉联想列表"
        },
        {
          "name": "placeholder",
          "propType": "string",
          "description": "默认提示"
        },
        {
          "name": "searchText",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "button 的内容"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义样式"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "样式名称"
        },
        {
          "name": "filterProps",
          "propType": "object",
          "description": "选择器的props"
        },
        {
          "name": "buttonProps",
          "propType": "object",
          "description": "按钮的额外属性"
        },
        {
          "name": "popupContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义渲染的的下拉框"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "自定义渲染的的下拉框"
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否显示清除按钮",
          "defaultValue": false
        },
        {
          "name": "hasIcon",
          "propType": "bool",
          "description": "是否显示搜索按钮",
          "defaultValue": true
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "rtl",
          "propType": "bool"
        }
      ]
    },
    {
      "componentName": "Select",
      "title": "Select",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Select",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "mode",
          "propType": {
            "type": "oneOf",
            "value": [
              "single",
              "multiple",
              "tag"
            ]
          },
          "description": "选择器模式",
          "defaultValue": "single"
        },
        {
          "name": "value",
          "propType": "any",
          "description": "当前值，用于受控模式"
        },
        {
          "name": "defaultValue",
          "propType": "any",
          "description": "初始的默认值"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "Select发生改变时触发的回调\n@param {*} value 选中的值\n@param {String} actionType 触发的方式, 'itemClick', 'enter', 'tag'\n@param {*} item 选中的值的对象数据 (useDetailValue=false有效)"
        },
        {
          "name": "hasBorder",
          "propType": "bool",
          "description": "是否有边框"
        },
        {
          "name": "hasArrow",
          "propType": "bool",
          "description": "是否有下拉箭头",
          "defaultValue": true
        },
        {
          "name": "showSearch",
          "propType": "bool",
          "description": "展开后是否能搜索（tag 模式下固定为true）",
          "defaultValue": false
        },
        {
          "name": "onSearch",
          "propType": "func",
          "description": "当搜索框值变化时回调\n@param {String} value 数据"
        },
        {
          "name": "onSearchClear",
          "propType": "func",
          "description": "当搜索框值被清空时候的回调\n@param {String} actionType 触发的方式, 'select'(选择清空), 'popupClose'(弹窗关闭清空)"
        },
        {
          "name": "hasSelectAll",
          "propType": {
            "type": "oneOfType",
            "value": [
              "bool",
              "string"
            ]
          },
          "description": "多选模式下是否有全选功能"
        },
        {
          "name": "fillProps",
          "propType": "string",
          "description": "填充到选择框里的值的 key\b\b"
        },
        {
          "name": "useDetailValue",
          "propType": "bool",
          "description": "onChange 返回的 value 使用 dataSource 的对象"
        },
        {
          "name": "cacheValue",
          "propType": "bool",
          "description": "dataSource 变化的时是否保留已选的内容",
          "defaultValue": true
        },
        {
          "name": "valueRender",
          "propType": "func",
          "description": "渲染 Select 展现内容的方法\n@param {Object} item 渲染节点的item\n@return {ReactNode} 展现内容\n@default item => item.label \\|\\| item.value"
        },
        {
          "name": "itemRender",
          "propType": "func",
          "description": "渲染 MenuItem 内容的方法\n@param {Object} item 渲染节点的item\n@param {String} searchValue 搜索关键字（如果开启搜索）\n@return {ReactNode} item node"
        },
        {
          "name": "notFoundContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "弹层内容为空的文案"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "searchValue",
          "propType": "string",
          "description": "受控搜索值，一般不需要设置\n@type {[type]}"
        },
        {
          "name": "tagInline",
          "propType": "bool",
          "description": "是否一行显示，仅在 mode 为 multiple 的时候生效",
          "defaultValue": false
        },
        {
          "name": "maxTagCount",
          "propType": "number",
          "description": "最多显示多少个 tag"
        },
        {
          "name": "maxTagPlaceholder",
          "propType": "func",
          "description": "隐藏多余 tag 时显示的内容，在 maxTagCount 生效时起作用\n@param {number} selectedValues 当前已选中的元素\n@param {number} totalValues 总待选元素"
        },
        {
          "name": "hiddenSelected",
          "propType": "bool",
          "description": "选择后是否立即隐藏菜单 (mode=multiple/tag 模式生效)"
        },
        {
          "name": "onRemove",
          "propType": "func",
          "description": "tag 删除回调\n@param {object} item 渲染节点的item"
        },
        {
          "name": "onFocus",
          "propType": "func",
          "description": "焦点事件"
        },
        {
          "name": "onBlur",
          "propType": "func",
          "description": "失去焦点事件"
        },
        {
          "name": "onMouseEnter",
          "propType": "func"
        },
        {
          "name": "onMouseLeave",
          "propType": "func"
        },
        {
          "name": "onKeyDown",
          "propType": "func"
        },
        {
          "name": "locale",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Slider",
      "title": "Slider",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Slider",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "className",
          "propType": "any",
          "description": "自定义传入的样式"
        },
        {
          "name": "adaptiveHeight",
          "propType": "bool",
          "description": "是否使用自适应高度",
          "defaultValue": false
        },
        {
          "name": "animation",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "bool"
            ]
          },
          "description": "动效类型，默认是'slide'",
          "defaultValue": "slide"
        },
        {
          "name": "arrows",
          "propType": "bool",
          "description": "是否显示箭头",
          "defaultValue": true
        },
        {
          "name": "arrowSize",
          "propType": {
            "type": "oneOf",
            "value": [
              "medium",
              "large"
            ]
          },
          "description": "导航箭头大小 可选值: 'medium', 'large'",
          "defaultValue": "medium"
        },
        {
          "name": "arrowPosition",
          "propType": {
            "type": "oneOf",
            "value": [
              "inner",
              "outer"
            ]
          },
          "description": "导航箭头位置 可选值: 'inner', 'outer'",
          "defaultValue": "inner"
        },
        {
          "name": "arrowDirection",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          },
          "description": "导航箭头的方向 可选值: 'hoz', 'ver'",
          "defaultValue": "hoz"
        },
        {
          "name": "autoplay",
          "propType": "bool",
          "description": "是否自动播放",
          "defaultValue": false
        },
        {
          "name": "autoplaySpeed",
          "propType": "number",
          "description": "自动播放的速度",
          "defaultValue": 3000
        },
        {
          "name": "nextArrow",
          "propType": {
            "type": "instanceOf",
            "value": "element"
          },
          "description": "向后箭头",
          "defaultValue": null
        },
        {
          "name": "prevArrow",
          "propType": {
            "type": "instanceOf",
            "value": "element"
          },
          "description": "向前箭头",
          "defaultValue": null
        },
        {
          "name": "centerMode",
          "propType": "bool",
          "description": "是否启用居中模式",
          "defaultValue": false
        },
        {
          "name": "dots",
          "propType": "bool",
          "description": "是否显示导航锚点",
          "defaultValue": true
        },
        {
          "name": "dotsDirection",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          },
          "description": "导航锚点位置",
          "defaultValue": "hoz"
        },
        {
          "name": "dotsClass",
          "propType": "string"
        },
        {
          "name": "dotRender",
          "propType": "func",
          "description": "自定义导航锚点"
        },
        {
          "name": "draggable",
          "propType": "bool",
          "description": "是否可拖拽",
          "defaultValue": true
        },
        {
          "name": "infinite",
          "propType": "bool",
          "description": "是否使用无穷循环模式",
          "defaultValue": true
        },
        {
          "name": "defaultActiveIndex",
          "propType": "number",
          "description": "初始被激活的轮播图",
          "defaultValue": 0
        },
        {
          "name": "lazyLoad",
          "propType": "bool",
          "description": "是否启用懒加载",
          "defaultValue": false
        },
        {
          "name": "slide",
          "propType": "string",
          "defaultValue": "div"
        },
        {
          "name": "slideDirection",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          },
          "description": "轮播方向",
          "defaultValue": "hoz"
        },
        {
          "name": "slidesToShow",
          "propType": "number",
          "description": "同时展示的图片数量",
          "defaultValue": 1
        },
        {
          "name": "slidesToScroll",
          "propType": "number",
          "description": "同时滑动的图片数量",
          "defaultValue": 1
        },
        {
          "name": "speed",
          "propType": "number",
          "description": "轮播速度",
          "defaultValue": 600
        },
        {
          "name": "activeIndex",
          "propType": "number",
          "description": "跳转到指定的轮播图（受控）"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "锚点导航触发方式",
          "defaultValue": "click"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "轮播切换的回调函数\n@param {Number} index 幻灯片的索引"
        },
        {
          "name": "onBeforeChange",
          "propType": "func"
        },
        {
          "name": "children",
          "propType": "any"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义传入的class",
          "defaultValue": null
        },
        {
          "name": "centerPadding",
          "propType": "string",
          "description": "Side padding when in center mode (px or %); 展示部分为center，pading会产生前后预览",
          "defaultValue": "50px"
        },
        {
          "name": "cssEase",
          "propType": "string",
          "description": "CSS3 Animation Easing,默认‘ease’",
          "defaultValue": "ease"
        },
        {
          "name": "edgeFriction",
          "propType": "number",
          "defaultValue": 0.35
        },
        {
          "name": "focusOnSelect",
          "propType": "bool",
          "description": "多图轮播时，点击选中后自动居中",
          "defaultValue": false
        },
        {
          "name": "pauseOnHover",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "swipe",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "swipeToSlide",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "touchMove",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "touchThreshold",
          "propType": "number",
          "defaultValue": 5
        },
        {
          "name": "useCSS",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "variableWidth",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "waitForAnimate",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "edgeEvent",
          "propType": "any",
          "defaultValue": null
        },
        {
          "name": "swipeEvent",
          "propType": "any",
          "defaultValue": null
        },
        {
          "name": "vertical",
          "defaultValue": false
        },
        {
          "name": "verticalSwiping",
          "defaultValue": false
        },
        {
          "name": "dotsRender",
          "defaultValue": null
        }
      ]
    },
    {
      "componentName": "SplitButton",
      "title": "SplitButton",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "SplitButton",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "primary",
              "secondary"
            ]
          },
          "description": "按钮的类型",
          "defaultValue": "normal"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "按钮组的尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "主按钮的文案"
        },
        {
          "name": "component",
          "propType": {
            "type": "oneOf",
            "value": [
              "button",
              "a"
            ]
          },
          "description": "设置标签类型"
        },
        {
          "name": "ghost",
          "propType": {
            "type": "oneOf",
            "value": [
              "light",
              "dark",
              false,
              true
            ]
          },
          "description": "是否为幽灵按钮"
        },
        {
          "name": "defaultSelectedKeys",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "默认激活的菜单项（用法同 Menu 非受控）",
          "defaultValue": []
        },
        {
          "name": "selectedKeys",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "激活的菜单项（用法同 Menu 受控）"
        },
        {
          "name": "selectMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "single",
              "multiple"
            ]
          },
          "description": "菜单的选择模式"
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "选择菜单项时的回调，参考 Menu"
        },
        {
          "name": "onItemClick",
          "propType": "func",
          "description": "点击菜单项时的回调，参考 Menu"
        },
        {
          "name": "triggerProps",
          "propType": "object",
          "description": "触发按钮的属性（支持 Button 的所有属性透传）"
        },
        {
          "name": "autoWidth",
          "propType": "bool",
          "description": "弹层菜单的宽度是否与按钮组一致",
          "defaultValue": true
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层是否显示"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否显示"
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层显示状态变化时的回调函数\n@param {Boolean} visible 弹层显示状态\n@param {String} type 触发弹层显示或隐藏的来源 menuSelect 表示由menu触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "popupTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "弹层的触发方式",
          "defaultValue": "click"
        },
        {
          "name": "popupAlign",
          "propType": "string",
          "description": "弹层对齐方式, 详情见Overlay align"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层自定义样式"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层自定义样式类"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "透传给弹层的属性"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "menuProps",
          "propType": "object",
          "description": "透传给 Menu 的属性"
        },
        {
          "name": "leftButtonProps",
          "propType": "object",
          "description": "透传给 左侧按钮 的属性"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": "any"
        }
      ]
    },
    {
      "componentName": "Step",
      "title": "Step",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Step",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "current",
          "propType": "number",
          "description": "当前步骤",
          "defaultValue": 0
        },
        {
          "name": "direction",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          },
          "description": "展示方向",
          "defaultValue": "hoz"
        },
        {
          "name": "labelPlacement",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          },
          "description": "横向布局时( direction 为 hoz )的内容排列",
          "defaultValue": "ver"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "circle",
              "arrow",
              "dot"
            ]
          },
          "description": "类型",
          "defaultValue": "circle"
        },
        {
          "name": "readOnly",
          "propType": "bool",
          "description": "是否只读模式"
        },
        {
          "name": "animation",
          "propType": "bool",
          "description": "是否开启动效",
          "defaultValue": true
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义样式名"
        },
        {
          "name": "itemRender",
          "propType": "func",
          "description": "StepItem 的自定义渲染\n@param {Number} index   节点索引\n@param {String} status  节点状态\n@returns {Node} 节点的渲染结果",
          "defaultValue": null
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "StepItem",
      "title": "StepItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Step",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Item"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "status",
          "propType": {
            "type": "oneOf",
            "value": [
              "wait",
              "process",
              "finish"
            ]
          },
          "description": "步骤的状态，如不传，会根据外层的 Step 的 current 属性生成，可选值为 `wait`, `process`, `finish`"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标题"
        },
        {
          "name": "direction",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          }
        },
        {
          "name": "labelPlacement",
          "propType": {
            "type": "oneOf",
            "value": [
              "hoz",
              "ver"
            ]
          }
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "circle",
              "arrow",
              "dot"
            ]
          },
          "defaultValue": "circle"
        },
        {
          "name": "icon",
          "propType": "string",
          "description": "图标"
        },
        {
          "name": "content",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "内容填充, shape为 arrow 时无效"
        },
        {
          "name": "itemRender",
          "propType": "func",
          "description": "StepItem 的自定义渲染, 会覆盖父节点设置的itemRender\n@param {Number} index   节点索引\n@param {String} status  节点状态\n@returns {Node} 节点的渲染结果"
        },
        {
          "name": "percent",
          "propType": "number",
          "description": "百分比"
        },
        {
          "name": "index",
          "propType": "number",
          "defaultValue": 0
        },
        {
          "name": "total",
          "propType": "number",
          "defaultValue": 1
        },
        {
          "name": "animation",
          "propType": "bool"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用"
        },
        {
          "name": "parentWidth",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number"
            ]
          }
        },
        {
          "name": "parentHeight",
          "propType": {
            "type": "oneOfType",
            "value": [
              "string",
              "number"
            ]
          }
        },
        {
          "name": "onClick",
          "propType": "func",
          "description": "点击步骤时的回调\n@param {Number} index 节点索引"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义样式"
        },
        {
          "name": "readOnly",
          "propType": "bool"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Switch",
      "title": "Switch",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Switch",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "pure",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内敛样式"
        },
        {
          "name": "checkedChildren",
          "propType": "any",
          "description": "打开时的内容"
        },
        {
          "name": "unCheckedChildren",
          "propType": "any",
          "description": "关闭时的内容"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "开关状态改变是触发此事件\n@param {Boolean} checked 是否为打开状态\n@param {Event} e DOM事件对象"
        },
        {
          "name": "checked",
          "propType": "bool",
          "description": "开关当前的值(针对受控组件)"
        },
        {
          "name": "defaultChecked",
          "propType": "bool",
          "description": "开关默认值 (针对非受控组件)",
          "defaultValue": false
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "表示开关被禁用",
          "defaultValue": false
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "medium",
              "small"
            ]
          },
          "description": "switch的尺寸\n@enumdesc 正常大小, 缩小版大小",
          "defaultValue": "medium"
        },
        {
          "name": "onClick",
          "propType": "func",
          "description": "鼠标点击事件\n@param {Event} e DOM事件对象"
        },
        {
          "name": "onKeyDown",
          "propType": "func",
          "description": "键盘按键事件\n@param {Event} e DOM事件对象"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态",
          "defaultValue": false
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        },
        {
          "name": "locale",
          "propType": "object",
          "description": "国际化配置"
        },
        {
          "name": "readOnly",
          "defaultValue": false
        }
      ]
    },
    {
      "componentName": "Tab",
      "title": "Tab",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Tab",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "device",
          "propType": {
            "type": "oneOf",
            "value": [
              "tablet",
              "desktop",
              "phone"
            ]
          }
        },
        {
          "name": "activeKey",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              "string"
            ]
          },
          "description": "被激活的选项卡的 key, 赋值则tab为受控组件, 用户无法切换"
        },
        {
          "name": "defaultActiveKey",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              "string"
            ]
          },
          "description": "初始化时被激活的选项卡的 key"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "pure",
              "wrapped",
              "text",
              "capsule"
            ]
          },
          "description": "外观形态",
          "defaultValue": "pure"
        },
        {
          "name": "animation",
          "propType": "bool",
          "description": "是否开启动效",
          "defaultValue": true
        },
        {
          "name": "excessMode",
          "propType": {
            "type": "oneOf",
            "value": [
              "slide",
              "dropdown"
            ]
          },
          "description": "选项卡过多时的滑动模式",
          "defaultValue": "slide"
        },
        {
          "name": "tabPosition",
          "propType": {
            "type": "oneOf",
            "value": [
              "top",
              "bottom",
              "left",
              "right"
            ]
          },
          "description": "导航选项卡的位置，只适用于包裹型（wrapped）选项卡",
          "defaultValue": "top"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium"
            ]
          },
          "description": "尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "triggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "hover",
              "click"
            ]
          },
          "description": "激活选项卡的触发方式",
          "defaultValue": "click"
        },
        {
          "name": "lazyLoad",
          "propType": "bool",
          "description": "是否延迟加载 TabPane 的内容, 默认开启, 即不提前渲染",
          "defaultValue": true
        },
        {
          "name": "unmountInactiveTabs",
          "propType": "bool",
          "description": "是否自动卸载未处于激活状态的选项卡",
          "defaultValue": false
        },
        {
          "name": "navStyle",
          "propType": "object",
          "description": "导航条的自定义样式"
        },
        {
          "name": "navClassName",
          "propType": "string",
          "description": "导航条的自定义样式类"
        },
        {
          "name": "contentStyle",
          "propType": "object",
          "description": "内容区容器的自定义样式"
        },
        {
          "name": "contentClassName",
          "propType": "string",
          "description": "内容区容器的自定义样式类"
        },
        {
          "name": "extra",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "导航栏附加内容"
        },
        {
          "name": "onClick",
          "propType": "func",
          "description": "点击单个选项卡时触发的回调"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "选项卡发生切换时的事件回调\n@param {String|Number} key 改变后的 key"
        },
        {
          "name": "onClose",
          "propType": "func",
          "description": "选项卡被关闭时的事件回调\n@param {String|Number} key   关闭的选项卡的 key"
        },
        {
          "name": "tabRender",
          "propType": "func",
          "description": "自定义选项卡模板渲染函数\n@param {String} key 当前 Tab.Item 的 key 值\n@param {Object} props 传给 Tab.Item 的所有属性键值对\n@return {ReactNode} 返回自定义组件"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层属性透传, 只有当 excessMode 为 dropdown 时生效"
        },
        {
          "name": "children",
          "propType": "any"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "TabItem",
      "title": "TabItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Tab",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Item"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "选项卡标题"
        },
        {
          "name": "closeable",
          "propType": "bool",
          "description": "单个选项卡是否可关闭",
          "defaultValue": false
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "选项卡是否被禁用"
        },
        {
          "name": "active",
          "propType": "bool"
        },
        {
          "name": "lazyLoad",
          "propType": "bool"
        },
        {
          "name": "unmountInactiveTabs",
          "propType": "bool"
        },
        {
          "name": "children",
          "propType": "any"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "TabItem",
      "title": "TabItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Tab",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "TabPane"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "选项卡标题"
        },
        {
          "name": "closeable",
          "propType": "bool",
          "description": "单个选项卡是否可关闭",
          "defaultValue": false
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "选项卡是否被禁用"
        },
        {
          "name": "active",
          "propType": "bool"
        },
        {
          "name": "lazyLoad",
          "propType": "bool"
        },
        {
          "name": "unmountInactiveTabs",
          "propType": "bool"
        },
        {
          "name": "children",
          "propType": "any"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Tag",
      "title": "Tag",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Tag",
        "main": "src/index.js",
        "destructuring": true
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "type",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "primary"
            ]
          },
          "description": "标签的类型"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "标签的尺寸（large 尺寸为兼容表单场景 large = medium）"
        },
        {
          "name": "closeArea",
          "propType": {
            "type": "oneOf",
            "value": [
              "tag",
              "tail"
            ]
          }
        },
        {
          "name": "color",
          "propType": "string",
          "description": "标签颜色, 目前支持：blue、 green、 orange、red、 turquoise、 yellow 和 hex 颜色值 （`color keywords`作为 Tag 组件的保留字，请勿直接使用 ）, `1.19.0` 以上版本生效"
        },
        {
          "name": "children",
          "propType": "array"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "TimePicker",
      "title": "TimePicker",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "TimePicker",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "按钮的文案"
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "error",
              "success"
            ]
          },
          "description": "输入框状态"
        },
        {
          "name": "placeholder",
          "propType": "string",
          "description": "输入框提示"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "时间值（moment 对象或时间字符串，受控状态使用）"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "custom"
          },
          "description": "时间初值（moment 对象或时间字符串，非受控状态使用）"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "时间选择框的尺寸",
          "defaultValue": "medium"
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否允许清空时间",
          "defaultValue": true
        },
        {
          "name": "format",
          "propType": "string",
          "description": "时间的格式\nhttps://momentjs.com/docs/#/parsing/string-format/",
          "defaultValue": "HH:mm:ss"
        },
        {
          "name": "hourStep",
          "propType": "number",
          "description": "小时选项步长"
        },
        {
          "name": "minuteStep",
          "propType": "number",
          "description": "分钟选项步长"
        },
        {
          "name": "secondStep",
          "propType": "number",
          "description": "秒钟选项步长"
        },
        {
          "name": "disabledHours",
          "propType": "func",
          "description": "禁用小时函数\n@param {Number} index 时 0 - 23\n@return {Boolean} 是否禁用"
        },
        {
          "name": "disabledMinutes",
          "propType": "func",
          "description": "禁用分钟函数\n@param {Number} index 分 0 - 59\n@return {Boolean} 是否禁用"
        },
        {
          "name": "disabledSeconds",
          "propType": "func",
          "description": "禁用秒钟函数\n@param {Number} index 秒 0 - 59\n@return {Boolean} 是否禁用"
        },
        {
          "name": "renderTimeMenuItems",
          "propType": "func",
          "description": "渲染的可选择时间列表\n[{\n label: '01',\n value: 1\n}]\n@param {Array} list 默认渲染的列表\n@param {String} mode 渲染的菜单 hour, minute, second\n@param {moment} value 当前时间，可能为 null\n@return {Array} 返回需要渲染的数据"
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "弹层是否显示（受控）"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "弹层默认是否显示（非受控）"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "弹层容器\n@param {Object} target 目标节点\n@return {ReactNode} 容器节点"
        },
        {
          "name": "popupAlign",
          "propType": "string",
          "description": "弹层对齐方式, 详情见Overlay 文档",
          "defaultValue": "tl tl"
        },
        {
          "name": "popupTriggerType",
          "propType": {
            "type": "oneOf",
            "value": [
              "click",
              "hover"
            ]
          },
          "description": "弹层触发方式",
          "defaultValue": "click"
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "弹层展示状态变化时的回调\n@param {Boolean} visible 弹层是否隐藏和显示\n@param {String} type 触发弹层显示和隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "弹层自定义样式"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "弹层自定义样式类"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "弹层属性"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {MomentObject} value 时间"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "时间值改变时的回调\n@param {Object|String} value 时间对象或时间字符串"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "name",
          "propType": "string"
        },
        {
          "name": "inputProps",
          "propType": "object"
        },
        {
          "name": "popupComponent",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          }
        },
        {
          "name": "popupContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "locale"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Timeline",
      "title": "Timeline",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Timeline",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式的品牌前缀",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "fold",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "自定义折叠选项 示例`[{foldArea: [startIndex, endIndex], foldShow: boolean}]`",
          "defaultValue": []
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义类名"
        },
        {
          "name": "children",
          "propType": "any"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "animation",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "TimelineItem",
      "title": "TimelineItem",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Timeline",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Item"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "index",
          "propType": "number"
        },
        {
          "name": "total",
          "propType": "number"
        },
        {
          "name": "folderIndex",
          "propType": "number"
        },
        {
          "name": "foldShow",
          "propType": "bool"
        },
        {
          "name": "state",
          "propType": {
            "type": "oneOf",
            "value": [
              "done",
              "process",
              "error",
              "success"
            ]
          },
          "description": "节点状态",
          "defaultValue": "done"
        },
        {
          "name": "icon",
          "propType": "string",
          "description": "图标"
        },
        {
          "name": "dot",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义时间轴节点"
        },
        {
          "name": "time",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "格式化后的时间"
        },
        {
          "name": "title",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "标题"
        },
        {
          "name": "timeLeft",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "左侧时间"
        },
        {
          "name": "content",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "右侧内容"
        },
        {
          "name": "toggleFold",
          "propType": "func"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "animation",
          "propType": "bool",
          "description": "动画",
          "defaultValue": true
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Transfer",
      "title": "Transfer",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Transfer",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "mode",
          "propType": {
            "type": "oneOf",
            "value": [
              "normal",
              "simple"
            ]
          },
          "description": "移动选项模式",
          "defaultValue": "normal"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "值发生改变的时候触发的回调函数\n@param {Array} value 右面板值\n@param {Array} data 右面板数据\n@param {Object} extra 额外参数\n@param {Array} extra.leftValue 左面板值\n@param {Array} extra.leftData 左面板数据\n@param {Array} extra.movedValue 发生移动的值\n@param {Object} extra.movedData 发生移动的数据\n@param {String} extra.direction 移动的方向，值为'left'或'right'"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "leftDisabled",
          "propType": "bool",
          "description": "是否禁用左侧面板",
          "defaultValue": false
        },
        {
          "name": "rightDisabled",
          "propType": "bool",
          "description": "是否禁用右侧面板",
          "defaultValue": false
        },
        {
          "name": "itemRender",
          "propType": "func",
          "description": "列表项渲染函数\n@param {Object} data 数据\n@return {ReactNode} 列表项内容"
        },
        {
          "name": "showSearch",
          "propType": "bool",
          "description": "是否显示搜索框",
          "defaultValue": false
        },
        {
          "name": "filter",
          "propType": "func",
          "description": "自定义搜索函数\n@param {String} searchedValue 搜索的内容\n@param {Object} data 数据\n@return {Boolean} 是否匹配到\n@default 根据 label 属性匹配"
        },
        {
          "name": "onSearch",
          "propType": "func",
          "description": "搜索框输入时触发的回调函数\n@param {String} searchedValue 搜索的内容\n@param {String} position 搜索面板的位置"
        },
        {
          "name": "searchPlaceholder",
          "propType": "string",
          "description": "搜索框占位符"
        },
        {
          "name": "notFoundContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "列表为空显示内容",
          "defaultValue": "Not Found"
        },
        {
          "name": "listClassName",
          "propType": "string",
          "description": "左右面板列表自定义样式类名"
        },
        {
          "name": "listStyle",
          "propType": "object",
          "description": "左右面板列表自定义样式对象"
        },
        {
          "name": "sortable",
          "propType": "bool",
          "description": "是否允许拖拽排序",
          "defaultValue": false
        },
        {
          "name": "onSort",
          "propType": "func",
          "description": "拖拽排序时触发的回调函数\n@param {Array} value 排序后的值\n@param {String} position 拖拽的面板位置，值为：left 或 right"
        },
        {
          "name": "locale",
          "propType": "object",
          "description": "自定义国际化文案对象"
        },
        {
          "name": "id",
          "propType": "string",
          "description": "请设置 id 以保证transfer的可访问性"
        },
        {
          "name": "children",
          "propType": "func",
          "description": "接收 children 自定义渲染列表"
        },
        {
          "name": "dataSource",
          "propType": "array"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "props": {
          "isExtends": true,
          "override": [{
            "name": "dataSource",
            "setter": "JsonSetter"
          }]
        }
      }
    },
    {
      "componentName": "Tree",
      "title": "Tree",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Tree",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "树节点"
        },
        {
          "name": "dataSource",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "数据源，该属性优先级高于 children"
        },
        {
          "name": "showLine",
          "propType": "bool",
          "description": "是否显示树的线",
          "defaultValue": false
        },
        {
          "name": "selectable",
          "propType": "bool",
          "description": "是否支持选中节点",
          "defaultValue": true
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "选中或取消选中节点时触发的回调函数\n@param {Array} selectedKeys 选中节点key的数组\n@param {Object} extra 额外参数\n@param {Array} extra.selectedNodes 选中节点的数组\n@param {Object} extra.node 当前操作的节点\n@param {Boolean} extra.selected 当前操作是否是选中"
        },
        {
          "name": "multiple",
          "propType": "bool",
          "description": "是否支持多选",
          "defaultValue": false
        },
        {
          "name": "checkable",
          "propType": "bool",
          "description": "是否支持勾选节点的复选框",
          "defaultValue": false
        },
        {
          "name": "checkStrictly",
          "propType": "bool",
          "description": "勾选节点复选框是否完全受控（父子节点选中状态不再关联）",
          "defaultValue": false
        },
        {
          "name": "checkedStrategy",
          "propType": {
            "type": "oneOf",
            "value": [
              "all",
              "parent",
              "child"
            ]
          },
          "description": "定义选中时回填的方式\n@enumdesc 返回所有选中的节点, 父子节点都选中时只返回父节点, 父子节点都选中时只返回子节点",
          "defaultValue": "all"
        },
        {
          "name": "onCheck",
          "propType": "func",
          "description": "勾选或取消勾选复选框时触发的回调函数\n@param {Array} checkedKeys 勾选复选框节点key的数组\n@param {Object} extra 额外参数\n@param {Array} extra.checkedNodes 勾选复选框节点的数组\n@param {Array} extra.checkedNodesPositions 包含有勾选复选框节点和其位置的对象的数组\n@param {Array} extra.indeterminateKeys 半选复选框节点 key 的数组\n@param {Object} extra.node 当前操作的节点\n@param {Boolean} extra.checked 当前操作是否是勾选"
        },
        {
          "name": "defaultExpandAll",
          "propType": "bool",
          "description": "是否默认展开所有节点",
          "defaultValue": false
        },
        {
          "name": "autoExpandParent",
          "propType": "bool",
          "description": "是否自动展开父节点，建议受控时设置为false",
          "defaultValue": true
        },
        {
          "name": "onExpand",
          "propType": "func",
          "description": "展开或收起节点时触发的回调函数\n@param {Array} expandedKeys 展开的节点key的数组\n@param {Object} extra 额外参数\n@param {Object} extra.node 当前操作的节点\n@param {Boolean} extra.expanded 当前操作是否是展开"
        },
        {
          "name": "editable",
          "propType": "bool",
          "description": "是否支持编辑节点内容",
          "defaultValue": false
        },
        {
          "name": "onEditFinish",
          "propType": "func",
          "description": "编辑节点内容完成时触发的回调函数\n@param {String} key 编辑节点的 key\n@param {String} label 编辑节点完成时节点的文本\n@param {Object} node 当前编辑的节点"
        },
        {
          "name": "draggable",
          "propType": "bool",
          "description": "是否支持拖拽节点",
          "defaultValue": false
        },
        {
          "name": "onDragStart",
          "propType": "func",
          "description": "开始拖拽节点时触发的回调函数\n@param {Object} info 拖拽信息\n@param {Object} info.event 事件对象\n@param {Object} info.node 拖拽的节点"
        },
        {
          "name": "onDragEnter",
          "propType": "func",
          "description": "拖拽节点进入目标节点时触发的回调函数\n@param {Object} info 拖拽信息\n@param {Object} info.event 事件对象\n@param {Object} info.node 目标节点\n@param {Array} info.expandedKeys 当前展开的节点key的数组"
        },
        {
          "name": "onDragOver",
          "propType": "func",
          "description": "拖拽节点在目标节点上移动的时候触发的回调函数\n@param {Object} info 拖拽信息\n@param {Object} info.event 事件对象\n@param {Object} info.node 目标节点"
        },
        {
          "name": "onDragLeave",
          "propType": "func",
          "description": "拖拽节点离开目标节点时触发的回调函数\n@param {Object} info 拖拽信息\n@param {Object} info.event 事件对象\n@param {Object} info.node 目标节点"
        },
        {
          "name": "onDragEnd",
          "propType": "func",
          "description": "拖拽节点拖拽结束时触发的回调函数\n@param {Object} info 拖拽信息\n@param {Object} info.event 事件对象\n@param {Object} info.node 目标节点"
        },
        {
          "name": "onDrop",
          "propType": "func",
          "description": "拖拽节点放入目标节点内或前后触发的回调函数\n@param {Object} info 拖拽信息\n@param {Object} info.event 事件对象\n@param {Object} info.node 目标节点\n@param {Object} info.dragNode 拖拽的节点\n@param {Array} info.dragNodesKeys 拖拽的节点和其子节点 key 的数组\n@param {Number} info.dropPosition 放置位置，-1代表当前节点前，0代表当前节点里，1代表当前节点后"
        },
        {
          "name": "canDrop",
          "propType": "func",
          "description": "节点是否可被作为拖拽的目标节点\n@param {Object} info 拖拽信息\n@param {Object} info.node 目标节点\n@param {Object} info.dragNode 拖拽的节点\n@param {Array} info.dragNodesKeys 拖拽的节点和其子节点 key 的数组\n@param {Number} info.dropPosition 放置位置，-1代表当前节点前，0代表当前节点里，1代表当前节点后\n@return {Boolean} 是否可以被当作目标节点"
        },
        {
          "name": "loadData",
          "propType": "func",
          "description": "异步加载数据的函数\n@param {Object} node 被点击展开的节点"
        },
        {
          "name": "filterTreeNode",
          "propType": "func",
          "description": "按需筛选高亮节点\n@param {Object} node 待筛选的节点\n@return {Boolean} 是否被筛选中"
        },
        {
          "name": "onRightClick",
          "propType": "func",
          "description": "右键点击节点时触发的回调函数\n@param {Object} info 信息对象\n@param {Object} info.event 事件对象\n@param {Object} info.node 点击的节点"
        },
        {
          "name": "isLabelBlock",
          "propType": "bool",
          "description": "设置节点是否占满剩余空间，一般用于统一在各节点右侧添加元素(借助 flex 实现，暂时只支持 ie10+)",
          "defaultValue": false
        },
        {
          "name": "isNodeBlock",
          "propType": {
            "type": "oneOfType",
            "value": [
              "bool",
              "object"
            ]
          },
          "description": "设置节点是否占满一行",
          "defaultValue": false
        },
        {
          "name": "animation",
          "propType": "bool",
          "description": "是否开启展开收起动画",
          "defaultValue": true
        },
        {
          "name": "focusedKey",
          "propType": "string",
          "description": "当前获得焦点的子菜单或菜单项 key 值"
        },
        {
          "name": "renderChildNodes",
          "propType": "func",
          "description": "渲染子节点\n@param {Array<ReactNode>} nodes 所有的子节点\n@return {ReactNode} 返回节点"
        },
        {
          "name": "focusable",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "autoFocus",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "onItemFocus",
          "propType": "func"
        },
        {
          "name": "onBlur",
          "propType": "func"
        },
        {
          "name": "onItemKeyDown",
          "propType": "func"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "TreeNode",
      "title": "TreeNode",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Tree",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Node"
      },
      "props": [
        {
          "name": "_key",
          "propType": "string"
        },
        {
          "name": "prefix",
          "propType": "string"
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "树节点"
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "节点文本内容",
          "defaultValue": "---"
        },
        {
          "name": "selectable",
          "propType": "bool",
          "description": "单独设置是否支持选中，覆盖 Tree 的 selectable"
        },
        {
          "name": "checkable",
          "propType": "bool",
          "description": "单独设置是否出现复选框，覆盖 Tree 的 checkable"
        },
        {
          "name": "editable",
          "propType": "bool",
          "description": "单独设置是否支持编辑，覆盖 Tree 的 editable"
        },
        {
          "name": "draggable",
          "propType": "bool",
          "description": "单独设置是否支持拖拽，覆盖 Tree 的 draggable"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁止节点响应",
          "defaultValue": false
        },
        {
          "name": "checkboxDisabled",
          "propType": "bool",
          "description": "是否禁止勾选节点复选框",
          "defaultValue": false
        },
        {
          "name": "isLeaf",
          "propType": "bool",
          "description": "是否是叶子节点，设置loadData时生效",
          "defaultValue": false
        },
        {
          "name": "root",
          "propType": "object"
        },
        {
          "name": "eventKey",
          "propType": "string"
        },
        {
          "name": "pos",
          "propType": "string"
        },
        {
          "name": "expanded",
          "propType": "bool"
        },
        {
          "name": "selected",
          "propType": "bool"
        },
        {
          "name": "checked",
          "propType": "bool"
        },
        {
          "name": "indeterminate",
          "propType": "bool"
        },
        {
          "name": "dragOver",
          "propType": "bool"
        },
        {
          "name": "dragOverGapTop",
          "propType": "bool"
        },
        {
          "name": "dragOverGapBottom",
          "propType": "bool"
        },
        {
          "name": "parentNode",
          "propType": "object"
        },
        {
          "name": "onKeyDown",
          "propType": "func"
        },
        {
          "name": "size",
          "propType": "number",
          "defaultValue": 1
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "TreeSelect",
      "title": "TreeSelect",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "TreeSelect",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "pure",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "树节点"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOf",
            "value": [
              "small",
              "medium",
              "large"
            ]
          },
          "description": "选择框大小",
          "defaultValue": "medium"
        },
        {
          "name": "placeholder",
          "propType": "string",
          "description": "选择框占位符"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用",
          "defaultValue": false
        },
        {
          "name": "hasArrow",
          "propType": "bool",
          "description": "是否有下拉箭头",
          "defaultValue": true
        },
        {
          "name": "hasBorder",
          "propType": "bool",
          "description": "是否有边框",
          "defaultValue": true
        },
        {
          "name": "hasClear",
          "propType": "bool",
          "description": "是否有清空按钮",
          "defaultValue": false
        },
        {
          "name": "label",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "自定义内联 label"
        },
        {
          "name": "readOnly",
          "propType": "bool",
          "description": "是否只读，只读模式下可以展开弹层但不能选择"
        },
        {
          "name": "autoWidth",
          "propType": "bool",
          "description": "下拉框是否与选择器对齐",
          "defaultValue": true
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "选中值改变时触发的回调函数\n@param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组\n@param {Object|Array} data 选中的数据，包括 value, label, pos, key属性，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点"
        },
        {
          "name": "showSearch",
          "propType": "bool",
          "description": "是否显示搜索框",
          "defaultValue": false
        },
        {
          "name": "onSearch",
          "propType": "func",
          "description": "在搜索框中输入时触发的回调函数\n@param {String} keyword 输入的关键字"
        },
        {
          "name": "onSearchClear",
          "propType": "func"
        },
        {
          "name": "notFoundContent",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "无数据时显示内容",
          "defaultValue": "Not Found"
        },
        {
          "name": "multiple",
          "propType": "bool",
          "description": "是否支持多选",
          "defaultValue": false
        },
        {
          "name": "treeCheckable",
          "propType": "bool",
          "description": "下拉框中的树是否支持勾选节点的复选框",
          "defaultValue": false
        },
        {
          "name": "treeCheckStrictly",
          "propType": "bool",
          "description": "下拉框中的树勾选节点复选框是否完全受控（父子节点选中状态不再关联）",
          "defaultValue": false
        },
        {
          "name": "treeCheckedStrategy",
          "propType": {
            "type": "oneOf",
            "value": [
              "all",
              "parent",
              "child"
            ]
          },
          "description": "定义选中时回填的方式\n@enumdesc 返回所有选中的节点, 父子节点都选中时只返回父节点, 父子节点都选中时只返回子节点",
          "defaultValue": "parent"
        },
        {
          "name": "treeDefaultExpandAll",
          "propType": "bool",
          "description": "下拉框中的树是否默认展开所有节点",
          "defaultValue": false
        },
        {
          "name": "treeLoadData",
          "propType": "func",
          "description": "下拉框中的树异步加载数据的函数，使用请参考[Tree的异步加载数据Demo](https://fusion.design/component/tree)\n@param {ReactElement} node 被点击展开的节点"
        },
        {
          "name": "treeProps",
          "propType": "object",
          "description": "透传到 Tree 的属性对象"
        },
        {
          "name": "defaultVisible",
          "propType": "bool",
          "description": "初始下拉框是否显示",
          "defaultValue": false
        },
        {
          "name": "visible",
          "propType": "bool",
          "description": "当前下拉框是否显示"
        },
        {
          "name": "onVisibleChange",
          "propType": "func",
          "description": "下拉框显示或关闭时触发事件的回调函数\n@param {Boolean} visible 是否显示\n@param {String} type 触发显示关闭的操作类型"
        },
        {
          "name": "popupStyle",
          "propType": "object",
          "description": "下拉框自定义样式对象"
        },
        {
          "name": "popupClassName",
          "propType": "string",
          "description": "下拉框样式自定义类名"
        },
        {
          "name": "popupContainer",
          "propType": "any",
          "description": "下拉框挂载的容器节点"
        },
        {
          "name": "popupProps",
          "propType": "object",
          "description": "透传到 Popup 的属性对象"
        },
        {
          "name": "followTrigger",
          "propType": "bool",
          "description": "是否跟随滚动"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {Array<data>} value 选择值 { label: , value:}"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Typography",
      "title": "Typography",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Typography",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "article"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Paragraph",
      "title": "Paragraph",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Typography",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Paragraph"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "p"
        },
        {
          "name": "type",
          "defaultValue": "long"
        },
        {
          "name": "size",
          "defaultValue": "medium"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Text",
      "title": "Text",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Typography",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Text"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "delete",
          "propType": "bool",
          "description": "添加删除线样式",
          "defaultValue": false
        },
        {
          "name": "mark",
          "propType": "bool",
          "description": "添加标记样式",
          "defaultValue": false
        },
        {
          "name": "underline",
          "propType": "bool",
          "description": "添加下划线样式",
          "defaultValue": false
        },
        {
          "name": "strong",
          "propType": "bool",
          "description": "是否加粗",
          "defaultValue": false
        },
        {
          "name": "code",
          "propType": "bool",
          "description": "添加代码样式",
          "defaultValue": false
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "span"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "rtl",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Upload",
      "title": "Upload",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Upload",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "action",
          "propType": "string",
          "description": "上传的地址"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "文件列表"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "默认文件列表"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "card"
            ]
          },
          "description": "上传按钮形状"
        },
        {
          "name": "listType",
          "propType": {
            "type": "oneOf",
            "value": [
              "text",
              "image",
              "card"
            ]
          },
          "description": "上传列表的样式\n@enumdesc 文字, 图文, 卡片"
        },
        {
          "name": "list",
          "propType": "any"
        },
        {
          "name": "name",
          "propType": "string",
          "description": "文件名字段"
        },
        {
          "name": "data",
          "propType": {
            "type": "oneOfType",
            "value": [
              "object",
              "func"
            ]
          },
          "description": "上传额外传参"
        },
        {
          "name": "formatter",
          "propType": "func",
          "description": "数据格式化函数，配合自定义 action 使用，参数为服务器的响应数据，详见 [formatter](#formater)\n@param {Object} response 返回\n@param {File} file 文件对象"
        },
        {
          "name": "limit",
          "propType": "number",
          "description": "最大文件上传个数",
          "defaultValue": null
        },
        {
          "name": "timeout",
          "propType": "number",
          "description": "设置上传超时,单位ms"
        },
        {
          "name": "dragable",
          "propType": "bool",
          "description": "可选参数，是否支持拖拽上传，`ie10+` 支持。"
        },
        {
          "name": "closable",
          "propType": "bool",
          "defaultValue": true
        },
        {
          "name": "useDataURL",
          "propType": "bool",
          "description": "可选参数，是否本地预览"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "可选参数，是否禁用上传功能"
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "选择文件回调"
        },
        {
          "name": "onProgress",
          "propType": "func",
          "description": "上传中"
        },
        {
          "name": "onChange",
          "propType": "func",
          "description": "上传文件改变时的状态\n@param {Object} info 文件事件对象"
        },
        {
          "name": "onSuccess",
          "propType": "func",
          "description": "可选参数，上传成功回调函数，参数为请求下响应信息以及文件\n@param {Object} file 文件\n@param {Array<Object>} value 值"
        },
        {
          "name": "afterSelect",
          "propType": "func",
          "description": "可选参数, 用于校验文件,afterSelect仅在 autoUpload=false 的时候生效,autoUpload=true时,可以使用beforeUpload完全可以替代该功能.\n@param {Object} file\n@returns {Boolean} 返回false会阻止上传,其他则表示正常"
        },
        {
          "name": "onRemove",
          "propType": "func",
          "description": "移除文件回调函数\n@param {Object} file 文件\n@returns {Boolean|Promise} 返回 false、Promise.resolve(false)、 Promise.reject() 将阻止文件删除"
        },
        {
          "name": "onError",
          "propType": "func",
          "description": "可选参数，上传失败回调函数，参数为上传失败的信息、响应信息以及文件\n@param {Object} file 出错的文件\n@param {Array} value 当前值"
        },
        {
          "name": "beforeUpload",
          "propType": "func",
          "description": "可选参数, 详见 [beforeUpload](#beforeUpload)\n@param {Object} file 所有文件\n@param {Object} options 参数\n@returns {Boolean|Object|Promise} 返回值作用见demo"
        },
        {
          "name": "onDrop",
          "propType": "func",
          "description": "放文件"
        },
        {
          "name": "className",
          "propType": "string",
          "description": "自定义class"
        },
        {
          "name": "style",
          "propType": "object",
          "description": "自定义内联样式"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          },
          "description": "子元素"
        },
        {
          "name": "autoUpload",
          "propType": "bool",
          "description": "自动上传",
          "defaultValue": true
        },
        {
          "name": "request",
          "propType": "func",
          "description": "自定义上传方法\n@param {Object} option\n@return {Object} object with abort method"
        },
        {
          "name": "progressProps",
          "propType": "object",
          "description": "透传给Progress props"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "isPreview",
          "propType": "bool",
          "description": "是否为预览态"
        },
        {
          "name": "renderPreview",
          "propType": "func",
          "description": "预览态模式下渲染的内容\n@param {number} value 评分值"
        }
      ]
    },
    {
      "componentName": "Selecter",
      "title": "Selecter",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Upload",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Selecter"
      },
      "props": [
        {
          "name": "id",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "disabled",
          "propType": "bool",
          "description": "是否禁用上传功能"
        },
        {
          "name": "multiple",
          "propType": "bool",
          "description": "是否支持多选文件，`ie10+` 支持。开启后按住 ctrl 可选择多个文件",
          "defaultValue": false
        },
        {
          "name": "dragable",
          "propType": "bool",
          "description": "是否支持拖拽上传，`ie10+` 支持。"
        },
        {
          "name": "accept",
          "propType": "string",
          "description": "接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)"
        },
        {
          "name": "onSelect",
          "propType": "func",
          "description": "文件选择回调"
        },
        {
          "name": "onDragOver",
          "propType": "func",
          "description": "拖拽经过回调"
        },
        {
          "name": "onDragLeave",
          "propType": "func",
          "description": "拖拽离开回调"
        },
        {
          "name": "onDrop",
          "propType": "func",
          "description": "拖拽完成回调"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "name",
          "propType": "string",
          "defaultValue": "file"
        }
      ]
    },
    {
      "componentName": "Dragger",
      "title": "Dragger",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Upload",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "DragUpload"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "description": "样式前缀",
          "defaultValue": "next-"
        },
        {
          "name": "locale",
          "propType": "object"
        },
        {
          "name": "shape",
          "propType": "string"
        },
        {
          "name": "onDragOver",
          "propType": "func"
        },
        {
          "name": "onDragLeave",
          "propType": "func"
        },
        {
          "name": "onDrop",
          "propType": "func"
        },
        {
          "name": "limit",
          "propType": "number"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "defaultValue",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          }
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "listType",
          "propType": "string"
        },
        {
          "name": "timeout",
          "propType": "number"
        }
      ]
    },
    {
      "componentName": "List",
      "title": "List",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Upload",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "List"
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "locale",
          "propType": "object",
          "description": "多语言"
        },
        {
          "name": "listType",
          "propType": {
            "type": "oneOf",
            "value": [
              "text",
              "image",
              "card"
            ]
          },
          "description": "文件列表，数据格式请参考 文件对象",
          "defaultValue": "text"
        },
        {
          "name": "value",
          "propType": {
            "type": "instanceOf",
            "value": "array"
          },
          "description": "文件列表",
          "defaultValue": []
        },
        {
          "name": "closable",
          "propType": "bool",
          "defaultValue": false
        },
        {
          "name": "onRemove",
          "propType": "func",
          "description": "删除文件回调(支持Promise)"
        },
        {
          "name": "onCancel",
          "propType": "func",
          "description": "取消上传回调(支持Promise)"
        },
        {
          "name": "onImageError",
          "propType": "func",
          "description": "头像加载出错回调"
        },
        {
          "name": "onPreview",
          "propType": "func",
          "description": "listType=card时点击图片回调"
        },
        {
          "name": "extraRender",
          "propType": "func",
          "description": "自定义额外渲染"
        },
        {
          "name": "progressProps",
          "propType": "object",
          "description": "透传给Progress props"
        },
        {
          "name": "children",
          "propType": {
            "type": "instanceOf",
            "value": "node"
          }
        },
        {
          "name": "uploader",
          "propType": "any"
        },
        {
          "name": "useDataURL",
          "propType": "bool",
          "description": "可选参数，是否本地预览"
        },
        {
          "name": "rtl",
          "propType": "bool"
        },
        {
          "name": "isPreview",
          "propType": "bool"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "Avatar",
      "title": "Avatar",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Avatar",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "children",
          "propType": "any"
        },
        {
          "name": "className",
          "propType": "string"
        },
        {
          "name": "size",
          "propType": {
            "type": "oneOfType",
            "value": [
              {
                "type": "oneOf",
                "value": [
                  "small",
                  "medium",
                  "large"
                ]
              },
              "number"
            ]
          },
          "description": "头像的大小",
          "defaultValue": "medium"
        },
        {
          "name": "shape",
          "propType": {
            "type": "oneOf",
            "value": [
              "circle",
              "square"
            ]
          },
          "description": "头像的形状",
          "defaultValue": "circle"
        },
        {
          "name": "icon",
          "propType": {
            "type": "oneOfType",
            "value": [
              {
                "type": "instanceOf",
                "value": "node"
              },
              "string"
            ]
          },
          "description": "icon 类头像的图标类型，可设为 Icon 的 `type` 或 `ReactNode`"
        },
        {
          "name": "src",
          "propType": "string",
          "description": "图片类头像的资源地址"
        },
        {
          "name": "onError",
          "propType": "func",
          "description": "图片加载失败的事件，返回 false 会关闭组件默认的 fallback 行为"
        },
        {
          "name": "alt",
          "propType": "string",
          "description": "图像无法显示时的 alt 替代文本"
        },
        {
          "name": "srcSet",
          "propType": "string",
          "description": "图片类头像响应式资源地址"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ]
    },
    {
      "componentName": "ResponsiveGrid",
      "title": "ResponsiveGrid",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "ResponsiveGrid",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "className",
          "propType": "any"
        },
        {
          "name": "device",
          "propType": {
            "type": "oneOf",
            "value": [
              "phone",
              "tablet",
              "desktop"
            ]
          },
          "description": "设备，用来做自适应，默认为 PC\n@enumdesc 手机, 平板, PC",
          "defaultValue": "desktop"
        },
        {
          "name": "rows",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              "string"
            ]
          }
        },
        {
          "name": "columns",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              "string"
            ]
          },
          "description": "分为几列， 默认是 12 列"
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "div"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "ResponsiveGrid.Cell",
      "title": "ResponsiveGrid.Cell",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "ResponsiveGrid",
        "main": "src/index.js",
        "destructuring": true,
        "subName": "Cell"
      },
      "props": [
        {
          "name": "device",
          "propType": {
            "type": "oneOf",
            "value": [
              "phone",
              "tablet",
              "desktop"
            ]
          },
          "defaultValue": "desktop"
        },
        {
          "name": "colSpan",
          "propType": {
            "type": "oneOfType",
            "value": [
              "number",
              "object"
            ]
          },
          "description": "横向，占据几列"
        },
        {
          "name": "rowSpan",
          "propType": "number",
          "description": "纵向，占据几行"
        },
        {
          "name": "component",
          "propType": {
            "type": "instanceOf",
            "value": "elementType"
          },
          "description": "设置标签类型",
          "defaultValue": "div"
        },
        {
          "name": "style",
          "propType": "object"
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    },
    {
      "componentName": "Box",
      "title": "Box",
      "docUrl": "",
      "screenshot": "",
      "npm": {
        "package": "@alifd/next",
        "version": "1.19.18",
        "exportName": "Box",
        "main": "src/index.js",
        "destructuring": true,
        "subName": ""
      },
      "props": [
        {
          "name": "prefix",
          "propType": "string",
          "defaultValue": "next-"
        },
        {
          "name": "style",
          "propType": "object"
        },
        {
          "name": "className",
          "propType": "any"
        },
        {
          "name": "direction",
          "propType": {
            "type": "oneOf",
            "value": [
              "row",
              "column"
            ]
          },
          "description": "布局方向，默认为 column ，一个元素占据一整行\n@default column",
          "defaultValue": "column"
        },
        {
          "name": "wrap",
          "propType": "bool",
          "description": "是否折行",
          "defaultValue": false
        },
        {
          "name": "justify",
          "propType": {
            "type": "oneOf",
            "value": [
              "flex-start",
              "center",
              "flex-end",
              "space-between",
              "space-around"
            ]
          },
          "description": "沿着主轴方向，子元素们的排布关系 （兼容性同 justify-content ）"
        },
        {
          "name": "align",
          "propType": {
            "type": "oneOf",
            "value": [
              "flex-start",
              "center",
              "flex-end",
              "baseline",
              "stretch"
            ]
          },
          "description": "垂直主轴方向，子元素们的排布关系 （兼容性同 align-items ）"
        },
        {
          "name": "device",
          "propType": {
            "type": "oneOf",
            "value": [
              "phone",
              "tablet",
              "desktop"
            ]
          }
        }
      ],
      "configure": {
        "component": {
          "isContainer": true
        }
      }
    }
  ],
  "componentList": [
    {
      "title": "Util",
      "children": [
        {
          "componentName": "Dropdown",
          "title": "下拉菜单",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "下拉菜单",
              "screenshot": "",
              "schema": {
                "componentName": "Dropdown",
                "props": {}
              }
            }
          ]
        }
      ],
      "icon": ""
    },
    {
      "title": "DataDisplay",
      "children": [
        {
          "componentName": "Avatar",
          "title": "头像",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "头像",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_avatar.png",
              "schema": {
                "componentName": "Avatar",
                "props": {
                  "prefix": "next-",
                  "size": "medium",
                  "shape": "circle"
                }
              }
            }
          ]
        },
        {
          "componentName": "Badge",
          "title": "徽标数",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "徽标数",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_badge.png",
              "schema": {
                "componentName": "Badge",
                "props": {
                  "prefix": "next-",
                  "showZero": true
                }
              }
            }
          ]
        },{
          "componentName": "Table",
          "title": "表格",
          "icon": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_table.png",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "表格",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_table.png",
              "schema": {
                "componentName": "Table",
                "props": {
                  "dataSource": [{
                    "id": 1, "time": "2016"
                  },{
                    "id": 2, "time": "2017"
                  }],
                  "size": "medium",
                  "prefix": "next-",
                  "hasBorder": true,
                  "hasHeader": true,
                  "isZebra": false,
                  "loading": false,
                  "expandedIndexSimulate": false,
                  "primaryKey": "id",
                  "locale": "zhCN.Table",
                  "crossline": false
                },
                "children": [
                  {
                    "componentName": "Table.Column",
                    "props": {
                      "title": "id",
                      "dataIndex": "id"
                    }
                  },
                  {
                    "componentName": "Table.Column",
                    "props": {
                      "title": "time",
                      "dataIndex": "time"
                    }
                  }
                ]
              }
            }
          ]
        },{
          "componentName": "Table.Column",
          "title": "表格列",
          "icon": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_table.png",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "表格列",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_table.png",
              "schema": {
                "componentName": "Table.Column",
                "props": {
                  "title": "name"
                }
              }
            }
          ]
        },
        {
          "componentName": "Calendar",
          "title": "日历",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "screenshot": "https://img.alicdn.com/tfs/TB158yMu4v1gK0jSZFFXXb0sXXa-112-64.png",
              "title": "卡片型",
              "schema": {
                "componentName": "Calendar",
                "props": {
                  "shape": "card"
                }
              }
            },
            {
              "screenshot": "https://img.alicdn.com/tfs/TB1PRmJu7P2gK0jSZPxXXacQpXa-112-64.png",
              "title": "面板型",
              "schema": {
                "componentName": "Calendar",
                "props": {
                  "shape": "panel"
                }
              }
            },
            {
              "screenshot": "https://img.alicdn.com/tfs/TB10JuKu.T1gK0jSZFhXXaAtVXa-112-64.png",
              "title": "全屏型",
              "schema": {
                "componentName": "Calendar",
                "props": {
                  "shape": "fullscreen"
                }
              }
            }
          ]
        },
        {
          "componentName": "Card",
          "title": "卡片",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "screenshot": "https://img.alicdn.com/tfs/TB1CHN3u4z1gK0jSZSgXXavwpXa-112-64.png",
              "label": "普通型",
              "schema": {
                "componentName": "Card",
                "props": {},
                "children": [
                  {
                    "componentName": "CardContent"
                  }
                ]
              }
            },
            {
              "screenshot": "https://img.alicdn.com/tfs/TB1.Ut6u4D1gK0jSZFKXXcJrVXa-112-64.png",
              "label": "自定义",
              "schema": {
                "componentName": "Card",
                "props": {
                  "__slot__extra": true,
                  "extra": {
                    "type": "JSBlock",
                    "value": {
                      "componentName": "Slot",
                      "props": {
                        "slotName": "extra",
                        "slotTitle": "自定义内容"
                      },
                      "condition": true,
                      "children": []
                    }
                  }
                },
                "children": [
                  {
                    "componentName": "CardContent"
                  }
                ]
              }
            }
          ]
        },
        {
          "componentName": "Cascader",
          "title": "级联",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "级联",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_cascader.png",
              "schema": {
                "componentName": "Cascader",
                "props": {
                  "prefix": "next-",
                  "expandTriggerType": "click"
                }
              }
            }
          ]
        },
        {
          "componentName": "Collapse",
          "title": "折叠面板",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "折叠面板",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_collapse.png",
              "schema": {
                "componentName": "Collapse",
                "props": {
                  "prefix": "next-"
                }
              }
            }
          ]
        },
        {
          "componentName": "List",
          "title": "列表",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "列表",
              "screenshot": "",
              "schema": {
                "componentName": "List",
                "props": {}
              }
            }
          ]
        },
        {
          "componentName": "Menu",
          "title": "菜单",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "菜单",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_menu.png",
              "schema": {
                "componentName": "Menu",
                "props": {
                  "prefix": "next-",
                  "defaultOpenKeys": [],
                  "mode": "inline",
                  "triggerType": "click",
                  "openMode": "multiple",
                  "inlineIndent": 20,
                  "inlineArrowDirection": "down",
                  "popupAlign": "follow",
                  "defaultSelectedKeys": [],
                  "hasSelectedIcon": true,
                  "labelToggleChecked": true,
                  "direction": "ver",
                  "hozAlign": "left",
                  "focusable": true,
                  "expandAnimation": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Menu.Item",
          "title": "菜单项",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "菜单项",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_menu.png",
              "schema": {
                "componentName": "Menu.Item",
                "props": {
                  "parentMode": "inline",
                  "type": "item",
                  "component": "",
                  "disabled": true,
                  "className": "",
                  "needIndent": ""
                }
              }
            }
          ]
        },
        {
          "componentName": "Progress",
          "title": "进度指示器",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "进度指示器",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_progress.png",
              "schema": {
                "componentName": "Progress",
                "props": {
                  "prefix": "next-",
                  "shape": "line",
                  "size": "medium",
                  "state": "normal"
                }
              }
            }
          ]
        },
        {
          "componentName": "Slider",
          "title": "图片轮播",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "图片轮播",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_slider.png",
              "schema": {
                "componentName": "Slider",
                "props": {
                  "prefix": "next-",
                  "animation": "slide",
                  "arrows": true,
                  "arrowSize": "medium",
                  "arrowPosition": "inner",
                  "arrowDirection": "hoz",
                  "autoplaySpeed": 3000,
                  "dots": true,
                  "dotsDirection": "hoz",
                  "draggable": true,
                  "infinite": true,
                  "slide": "div",
                  "slideDirection": "hoz",
                  "slidesToShow": 1,
                  "slidesToScroll": 1,
                  "speed": 600,
                  "triggerType": "click",
                  "centerPadding": "50px",
                  "cssEase": "ease",
                  "edgeFriction": 0.35,
                  "swipe": true,
                  "touchMove": true,
                  "touchThreshold": 5,
                  "useCSS": true,
                  "waitForAnimate": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Tag",
          "title": "标签",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "标签",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_tag.png",
              "schema": {
                "componentName": "Tag",
                "props": {}
              }
            }
          ]
        },
        {
          "componentName": "Timeline",
          "title": "时间轴",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "时间轴",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_timeline.png",
              "schema": {
                "componentName": "Timeline",
                "props": {
                  "prefix": "next-",
                  "fold": [],
                  "animation": true
                },"children": [
                  {
                    "componentName": "TimelineItem",
                    "props": {
                      "state": "process",
                      "title": "12344"
                    }
                  },
                  {
                    "componentName": "TimelineItem",
                    "props": {
                      "title": "Ship"
                    }
                  },
                  {
                    "componentName": "TimelineItem",
                    "props": {
                      "title": "Order"
                    }
                  }
                ]
              }
            }
          ]
        },{
          "componentName": "TimelineItem",
          "title": "时间轴 Item",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "时间轴 Item",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_timeline.png",
              "schema": {
                "componentName": "TimelineItem",
                "props": {
                  "prefix": "next-",
                  "fold": [],
                  "animation": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Tree",
          "title": "树形控件",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "树形控件",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_tree.png",
              "schema": {
                "componentName": "Tree",
                "props": {
                  "prefix": "next-",
                  "selectable": true,
                  "checkedStrategy": "all",
                  "autoExpandParent": true,
                  "animation": true,
                  "focusable": true
                }
              }
            }
          ]
        }
      ],
      "icon": ""
    },
    {
      "title": "Feedback",
      "children": [
        {
          "componentName": "Balloon",
          "title": "气泡提示",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "气泡提示",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_balloon.png",
              "schema": {
                "componentName": "Balloon",
                "props": {
                  "prefix": "next-",
                  "size": "medium",
                  "type": "normal",
                  "closable": true,
                  "align": "b",
                  "offset": [
                    0,
                    0
                  ],
                  "triggerType": "hover",
                  "autoFocus": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Dialog",
          "title": "弹窗",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "弹窗",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_dialog.png",
              "schema": {
                "componentName": "Dialog",
                "props": {
                  "prefix": "next-",
                  "footerAlign": "right",
                  "footerActions": [
                    "ok",
                    "cancel"
                  ],
                  "closeable": "esc,close",
                  "hasMask": true,
                  "align": "cc cc",
                  "minMargin": 40
                }
              }
            }
          ]
        },
        {
          "componentName": "Loading",
          "title": "加载",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "加载",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_loading.png",
              "schema": {
                "componentName": "Loading",
                "props": {
                  "prefix": "next-",
                  "tipAlign": "bottom",
                  "visible": true,
                  "size": "large",
                  "inline": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Message",
          "title": "信息提示",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "信息提示",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_message.png",
              "schema": {
                "componentName": "Message",
                "props": {
                  "prefix": "next-",
                  "type": "success",
                  "shape": "inline",
                  "size": "medium",
                  "defaultVisible": true,
                  "animation": true
                }
              }
            }
          ]
        }
      ],
      "icon": ""
    },
    {
      "title": "General",
      "children": [
        {
          "componentName": "Box",
          "title": "弹性布局",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "弹性布局",
              "screenshot": "",
              "schema": {
                "componentName": "Box",
                "props": {}
              }
            }
          ]
        },
        {
          "componentName": "Button",
          "title": "按钮",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "按钮",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_button.png",
              "schema": {
                "componentName": "Button",
                "props": {
                  "prefix": "next-",
                  "type": "normal",
                  "size": "medium",
                  "htmlType": "button",
                  "component": "button"
                },
                "children": "取消"
              }
            },
            {
              "title": "次要",
              "screenshot": "https://img.alicdn.com/tfs/TB1a.N1uVT7gK0jSZFpXXaTkpXa-112-64.png",
              "schema": {
                "componentName": "Button",
                "props": {
                  "type": "primary",
                  "size": "large",
                  "htmlType": "button",
                  "component": "button",
                  "children": ["提交"]
                }
              }
            }
          ]
        },
        {
          "componentName": "Button.Group",
          "title": "按钮组",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "按钮组",
              "screenshot": "https://img.alicdn.com/tfs/TB1t6dhvV67gK0jSZPfXXahhFXa-310-122.png",
              "schema": {
                "componentName": "Button.Group",
                "props": {

                },
                "children": [{
                  "componentName": "Button",
                  "props": {
                    "type": "primary",
                    "style": {
                      "margin": "0 5px 0 5px"
                    },
                    "htmlType": "submit"
                  },
                  "children": [
                    {
                      "componentName": "Icon",
                      "props": {
                        "type": "success"
                      }
                    },
                    "提交"
                  ]
                }, {
                  "componentName": "Button",
                  "props": {
                    "type": "normal",
                    "style": {
                      "margin": "0 5px 0 5px"
                    },
                    "htmlType": "reset"
                  },
                  "children": "重置"
                }]
              }
            }
          ]
        },
        {
          "componentName": "Divider",
          "title": "分隔符",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "分隔符",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_divider.png",
              "schema": {
                "componentName": "Divider",
                "props": {
                  "prefix": "next-",
                  "direction": "hoz",
                  "orientation": "center"
                }
              }
            }
          ]
        },
        {
          "componentName": "Grid",
          "title": "栅格",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "栅格",
              "screenshot": "",
              "schema": {
                "componentName": "Grid",
                "props": {}
              }
            }
          ]
        },
        {
          "componentName": "Icon",
          "title": "图标",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "图标",
              "screenshot": "",
              "schema": {
                "componentName": "Icon",
                "props": {
                  "type": "smile"
                }
              }
            }
          ]
        },
        {
          "componentName": "MenuButton",
          "title": "菜单按钮",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "菜单按钮",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_menu-button.png",
              "schema": {
                "componentName": "MenuButton",
                "props": {
                  "prefix": "next-",
                  "autoWidth": true,
                  "popupTriggerType": "click",
                  "defaultSelectedKeys": []
                }
              }
            }
          ]
        },
        {
          "componentName": "ResponsiveGrid",
          "title": "栅格布局",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "栅格布局",
              "screenshot": "",
              "schema": {
                "componentName": "ResponsiveGrid",
                "props": {}
              }
            }
          ]
        },
        {
          "componentName": "ResponsiveGrid.Cell",
          "title": "栅格布局 Cell",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "栅格布局 Cell",
              "screenshot": "",
              "schema": {
                "componentName": "ResponsiveGrid.Cell",
                "props": {}
              }
            }
          ]
        },
        {
          "componentName": "SplitButton",
          "title": "分隔按钮",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "分隔按钮",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_split-button.png",
              "schema": {
                "componentName": "SplitButton",
                "props": {
                  "prefix": "next-",
                  "type": "normal",
                  "size": "medium",
                  "defaultSelectedKeys": [],
                  "autoWidth": true,
                  "popupTriggerType": "click"
                }
              }
            }
          ]
        },
        {
          "componentName": "Typography",
          "title": "排版",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "排版",
              "screenshot": "",
              "schema": {
                "componentName": "Typography",
                "props": {}
              }
            }
          ]
        }
      ],
      "icon": ""
    },
    {
      "title": "Navigation",
      "children": [
        {
          "componentName": "Breadcrumb",
          "title": "面包屑",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "面包屑",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_breadcrumb.png",
              "schema": {
                "componentName": "Breadcrumb",
                "props": {
                  "prefix": "next-",
                  "maxNode": 100,
                  "component": "nav"
                }
              }
            }
          ]
        },{
          "componentName": "Breadcrumb.Item",
          "title": "面包屑 Item",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "面包屑",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_breadcrumb.png",
              "schema": {
                "componentName": "Breadcrumb.Item",
                "props": {
                  "prefix": "next-",
                  "children": [
                    "222",
                    "222111"
                  ]
                }
              }
            }
          ]
        },
        {
          "componentName": "MCBreadcrumb",
          "title": "MC面包屑",
          "icon": "",
          "package": "mc-breadcrumb",
          "library": "MCBreadcrumb",
          "snippets": [
            {
              "title": "面包屑",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_breadcrumb.png",
              "schema": {
                "componentName": "MCBreadcrumb",
                "props": {
                  "title": "物料中心",
                  "prefix": "next-",
                  "maxNode": 100
                }
              }
            }
          ]
        },
        {
          "componentName": "Nav",
          "title": "导航",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "导航",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_nav.png",
              "schema": {
                "componentName": "Nav",
                "props": {
                  "prefix": "next-",
                  "type": "normal",
                  "direction": "ver",
                  "hozAlign": "left",
                  "mode": "inline",
                  "triggerType": "click",
                  "inlineIndent": 20,
                  "openMode": "multiple",
                  "defaultSelectedKeys": [],
                  "popupAlign": "follow",
                  "hasArrow": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Pagination",
          "title": "翻页器",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "翻页器",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_pagination.png",
              "schema": {
                "componentName": "Pagination",
                "props": {
                  "prefix": "next-",
                  "type": "normal",
                  "shape": "normal",
                  "size": "medium",
                  "defaultCurrent": 1,
                  "total": 100,
                  "pageShowCount": 5,
                  "pageSize": 10,
                  "pageSizePosition": "start",
                  "showJump": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Step",
          "title": "步骤",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "步骤",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_step.png",
              "schema": {
                "componentName": "Step",
                "props": {
                  "prefix": "next-",
                  "direction": "hoz",
                  "labelPlacement": "ver",
                  "shape": "circle",
                  "animation": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Tab",
          "title": "选项卡",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "选项卡",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_tab.png",
              "schema": {
                "componentName": "Tab",
                "props": {
                  "prefix": "next-",
                  "shape": "pure",
                  "animation": true,
                  "excessMode": "slide",
                  "tabPosition": "top",
                  "size": "medium",
                  "triggerType": "click",
                  "lazyLoad": true
                }
              }
            }
          ]
        }
      ],
      "icon": ""
    },
    {
      "title": "DataEntry",
      "children": [
        {
          "componentName": "CascaderSelect",
          "title": "级联选择",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "级联选择",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_cascader-select.png",
              "schema": {
                "componentName": "CascaderSelect",
                "props": {
                  "prefix": "next-",
                  "size": "medium",
                  "hasArrow": true,
                  "hasBorder": true,
                  "expandTriggerType": "click",
                  "resultAutoWidth": true,
                  "notFoundContent": "Not Found"
                }
              }
            }
          ]
        },
        {
          "componentName": "Checkbox",
          "title": "复选按钮",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "复选按钮",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_checkbox.png",
              "schema": {
                "componentName": "Checkbox",
                "props": {
                  "prefix": "next-"
                }
              }
            }
          ]
        },
        {
          "componentName": "DatePicker",
          "title": "日期选择框",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "日期选择框",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_date-picker.png",
              "schema": {
                "componentName": "DatePicker",
                "props": {
                  "prefix": "next-",
                  "format": "YYYY-MM-DD",
                  "size": "medium",
                  "hasClear": true,
                  "popupTriggerType": "click",
                  "popupAlign": "tl tl"
                }
              }
            }
          ]
        },
        {
          "componentName": "Form.Item",
          "title": "Form.Item",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "Form.Item",
              "screenshot": "",
              "schema": {
                "componentName": "Form.Item",
                "props": {
                  "style":{
                    "margin-bottom": "0",
                    "min-width": "200px",
                    "min-height": "28px"
                  }
                }
              }
            }
          ]
        },
        {
          "componentName": "Form",
          "title": "表单",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "表单",
              "screenshot": "",
              "schema": {
                "componentName": "Form",
                "props": {}
              }
            }
          ]
        },
        {
          "componentName": "Input",
          "title": "输入框",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "输入框",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_input.png",
              "schema": {
                "componentName": "Input",
                "props": {
                  "hasBorder": true,
                  "size": "medium",
                  "autoComplete": "off"
                }
              }
            }
          ]
        },
        {
          "componentName": "NumberPicker",
          "title": "数字输入框",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "数字输入框",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_number-picker.png",
              "schema": {
                "componentName": "NumberPicker",
                "props": {
                  "prefix": "next-",
                  "type": "normal",
                  "size": "medium",
                  "step": 1,
                  "editable": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Radio",
          "title": "单选框",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "单选框",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_radio.png",
              "schema": {
                "componentName": "Radio",
                "props": {}
              }
            }
          ]
        },
        {
          "componentName": "Range",
          "title": "区段选择器",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "区段选择器",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_range.png",
              "schema": {
                "componentName": "Range",
                "props": {
                  "prefix": "next-",
                  "slider": "single",
                  "max": 100,
                  "step": 1,
                  "marksPosition": "above",
                  "hasTip": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Rating",
          "title": "评分",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "评分",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_rating.png",
              "schema": {
                "componentName": "Rating",
                "props": {
                  "prefix": "next-",
                  "count": 5,
                  "size": "medium",
                  "iconType": "favorites-filling"
                }
              }
            }
          ]
        },
        {
          "componentName": "Search",
          "title": "搜索",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "搜索",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_search.png",
              "schema": {
                "componentName": "Search",
                "props": {
                  "prefix": "next-",
                  "shape": "normal",
                  "type": "normal",
                  "size": "medium",
                  "filter": [],
                  "hasIcon": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Select",
          "title": "选择器",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "选择器",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_select.png",
              "schema": {
                "componentName": "Select",
                "props": {
                  "mode": "single",
                  "hasArrow": true,
                  "cacheValue": true
                }
              }
            }
          ]
        },
        {
          "componentName": "Switch",
          "title": "开关组件",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "开关组件",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_switch.png",
              "schema": {
                "componentName": "Switch",
                "props": {
                  "prefix": "next-",
                  "size": "medium"
                }
              }
            }
          ]
        },
        {
          "componentName": "TimePicker",
          "title": "时间选择框",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "时间选择框",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_time-picker.png",
              "schema": {
                "componentName": "TimePicker",
                "props": {
                  "prefix": "next-",
                  "size": "medium",
                  "hasClear": true,
                  "format": "HH:mm:ss",
                  "popupAlign": "tl tl",
                  "popupTriggerType": "click"
                }
              }
            }
          ]
        },
        {
          "componentName": "Transfer",
          "title": "穿梭框",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "穿梭框",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_transfer.png",
              "schema": {
                "componentName": "Transfer",
                "props": {
                  "prefix": "next-",
                  "mode": "normal",
                  "notFoundContent": "Not Found"
                }
              }
            }
          ]
        },
        {
          "componentName": "TreeSelect",
          "title": "树型选择控件",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "树型选择控件",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_tree-select.png",
              "schema": {
                "componentName": "TreeSelect",
                "props": {
                  "prefix": "next-",
                  "size": "medium",
                  "hasArrow": true,
                  "hasBorder": true,
                  "autoWidth": true,
                  "notFoundContent": "Not Found",
                  "treeCheckedStrategy": "parent"
                }
              }
            }
          ]
        },
        {
          "componentName": "Upload",
          "title": "上传组件",
          "icon": "",
          "package": "@alife/next",
          "library": "Next",
          "snippets": [
            {
              "title": "上传组件",
              "screenshot": "https://alifd.oss-cn-hangzhou.aliyuncs.com/fusion-cool/icons/icon-light/ic_light_upload.png",
              "schema": {
                "componentName": "Upload",
                "props": {
                  "prefix": "next-",
                  "closable": true,
                  "autoUpload": true
                }
              }
            }
          ]
        }
      ],
      "icon": ""
    }
  ]
}
